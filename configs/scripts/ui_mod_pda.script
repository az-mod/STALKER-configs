---=============================================================================================---
---------------------------------------------------------------------------------------------------
-------------------------------------(Функции для КПК)---------------------------------------------
---------------------------------------------------------------------------------------------------
---=============================================================================================---
class "equipments_source" (CUIListBoxItem)
function equipments_source:__init(height) super(height)
   self.title=self:GetTextItem()
   self:SetTextColor(GetARGB(255,210,210,210))
   self.title:SetFont(GetFontLetterica18Russian())
   self.title:SetWndSize(vector2():set(278,height))
   self.title:SetEllipsis(true)
end
class "personal_pda" (CUIScriptWnd)
function personal_pda:__init(owner) super()
   self.owner = owner
   self:InitControls()
   self:InitCallBacks()
end
function personal_pda:__finalize()
end
function personal_pda:InitControls()
   self:SetWndRect(Frect():set(0,0,1024,768))
   local xml = CScriptXmlInit()
   xml:ParseFile("ui_mod_elements.xml")
   self.personal_pda_form=xml:InitStatic("personal_pda_form",self)
   self:start_button(xml,"btn_off_pda")
   ----------------
   -- Переменные --
   ----------------
   self.pda_section = 0
   self.equipments_section = {}
   self.equipments_processing = {{item_slot=2,flg=0},{item_slot=3,flg=0},{item_slot=7,flg=0},{item_slot=12,flg=0}}
   self.achievements_sniper_status = "not_to_know"
   self.achievements_legend_status = "not_to_know"
   self.achievements_pathfinder_status = "not_to_know"
   self.achievements_guidebook_status = "not_to_know"
   self.achievements_marauder_status = "not_to_know"
   self.achievements_magnate_status = "not_to_know"
   self.achievements_assistant_status = "not_to_know"
   self.achievements_lifeguard_status = "not_to_know"
   ----------------------
   -- Панель навигации --
   ----------------------
   self:start_button(xml,"tab_statistic")
   self:start_button(xml,"tab_advices")
   if r_mod_params("bool","disable_sgm_achievements",false)==false then
      self:start_button(xml,"tab_achievements")
   end
   self:start_button(xml,"tab_library")
   if has_alife_info("pri_a28_actor_in_zone_stay") then
      self:start_button(xml,"tab_diplomatia")
   end
   --/self:start_button(xml,"tab_equipments")
   ------------------------
   -- Основное наложение --
   ------------------------
   self:register_element(xml,"pda_top_frame")
   self:register_element(xml,"pda_game_time")
   self:register_element(xml,"pda_welcome_screen")
   --------------
   -- Переходы --
   --------------
   self:register_button(xml,"about_cheat_achievement_page")
   self:register_button(xml,"achievements_next_page")
   self:register_button(xml,"achievements_back_page")
   self:register_button(xml,"library_next_page")
   self:register_button(xml,"library_back_page")
   self:register_button(xml,"statistic_killed_page")
   self:register_button(xml,"statistic_home_page")
   self:register_button(xml,"statistic_community_page")
   self:register_button(xml,"statistic_previous_page")
   -----------------------
   -- Строки статистики --
   -----------------------
   self:register_element(xml,"statistic_setka")
   self:register_element(xml,"statistic_line_1_title")
   self:register_element(xml,"statistic_line_1_value")
   self:register_element(xml,"statistic_line_2_title")
   self:register_element(xml,"statistic_line_2_value")
   self:register_element(xml,"statistic_line_3_title")
   self:register_element(xml,"statistic_line_3_value")
   self:register_element(xml,"statistic_line_4_title")
   self:register_element(xml,"statistic_line_4_value")
   self:register_element(xml,"statistic_line_5_title")
   self:register_element(xml,"statistic_line_5_value")
   self:register_element(xml,"statistic_line_6_title")
   self:register_element(xml,"statistic_line_6_value")
   self:register_element(xml,"statistic_line_7_title")
   self:register_element(xml,"statistic_line_7_value")
   self:register_element(xml,"statistic_line_8_title")
   self:register_element(xml,"statistic_line_8_value")
   self:register_element(xml,"statistic_line_9_title")
   self:register_element(xml,"statistic_line_9_value")
   self:register_element(xml,"statistic_line_10_title")
   self:register_element(xml,"statistic_line_10_value")
   self:register_element(xml,"statistic_line_11_title")
   self:register_element(xml,"statistic_line_11_value")
   self:register_element(xml,"statistic_line_12_title")
   self:register_element(xml,"statistic_line_12_value")
   self:register_element(xml,"statistic_line_13_title")
   self:register_element(xml,"statistic_line_13_value")
   self:register_element(xml,"statistic_line_14_title")
   self:register_element(xml,"statistic_line_14_value")
   self:register_element(xml,"statistic_line_15_title")
   self:register_element(xml,"statistic_line_15_value")
   self:register_element(xml,"statistic_line_16_title")
   self:register_element(xml,"statistic_line_16_value")
   self:register_element(xml,"statistic_line_17_title")
   self:register_element(xml,"statistic_line_17_value")
   self:register_element(xml,"statistic_line_18_title")
   self:register_element(xml,"statistic_line_18_value")
   self:register_element(xml,"statistic_line_19_title")
   self:register_element(xml,"statistic_line_19_value")
   self:register_element(xml,"statistic_line_20_title")
   self:register_element(xml,"statistic_line_20_value")
   self:register_element(xml,"statistic_line_21_title")
   self:register_element(xml,"statistic_line_21_value")
   self:register_element(xml,"statistic_line_22_title")
   self:register_element(xml,"statistic_line_22_value")
   self:register_element(xml,"statistic_line_23_title")
   self:register_element(xml,"statistic_line_23_value")
   self:register_element(xml,"statistic_line_24_title")
   self:register_element(xml,"statistic_line_24_value")
   self:register_element(xml,"statistic_line_25_title")
   self:register_element(xml,"statistic_line_25_value")
   self:register_element(xml,"statistic_line_26_title")
   self:register_element(xml,"statistic_line_26_value")
   --------------------
   -- Строки советов --
   --------------------
   self:register_element(xml,"advices_field")
   -----------------------
   -- Строки достижений --
   -----------------------
   self:register_element(xml,"achievements_field")
   self:register_element(xml,"achievements_table_sniper")
   self:register_element(xml,"achievements_icon_sniper")
   self:register_element(xml,"achievements_name_sniper")
   self:register_element(xml,"achievements_status_sniper_a")
   self:register_element(xml,"achievements_status_sniper_b")
   self:register_element(xml,"achievements_need_title_sniper")
   self:register_element(xml,"achievements_bonus_title_sniper")
   self:register_element(xml,"achievements_need_box_sniper")
   self:register_element(xml,"achievements_bonus_box_sniper")
   self:register_element(xml,"achievements_table_legend")
   self:register_element(xml,"achievements_icon_legend")
   self:register_element(xml,"achievements_name_legend")
   self:register_element(xml,"achievements_status_legend_a")
   self:register_element(xml,"achievements_status_legend_b")
   self:register_element(xml,"achievements_need_title_legend")
   self:register_element(xml,"achievements_bonus_title_legend")
   self:register_element(xml,"achievements_need_box_legend")
   self:register_element(xml,"achievements_bonus_box_legend")
   self:register_element(xml,"achievements_table_pathfinder")
   self:register_element(xml,"achievements_icon_pathfinder")
   self:register_element(xml,"achievements_name_pathfinder")
   self:register_element(xml,"achievements_status_pathfinder_a")
   self:register_element(xml,"achievements_status_pathfinder_b")
   self:register_element(xml,"achievements_need_title_pathfinder")
   self:register_element(xml,"achievements_bonus_title_pathfinder")
   self:register_element(xml,"achievements_need_box_pathfinder")
   self:register_element(xml,"achievements_bonus_box_pathfinder")
   self:register_element(xml,"achievements_table_guidebook")
   self:register_element(xml,"achievements_icon_guidebook")
   self:register_element(xml,"achievements_name_guidebook")
   self:register_element(xml,"achievements_status_guidebook_a")
   self:register_element(xml,"achievements_status_guidebook_b")
   self:register_element(xml,"achievements_need_title_guidebook")
   self:register_element(xml,"achievements_bonus_title_guidebook")
   self:register_element(xml,"achievements_need_box_guidebook")
   self:register_element(xml,"achievements_bonus_box_guidebook")
   self:register_element(xml,"achievements_table_marauder")
   self:register_element(xml,"achievements_icon_marauder")
   self:register_element(xml,"achievements_name_marauder")
   self:register_element(xml,"achievements_status_marauder_a")
   self:register_element(xml,"achievements_status_marauder_b")
   self:register_element(xml,"achievements_need_title_marauder")
   self:register_element(xml,"achievements_bonus_title_marauder")
   self:register_element(xml,"achievements_need_box_marauder")
   self:register_element(xml,"achievements_bonus_box_marauder")
   self:register_element(xml,"achievements_table_magnate")
   self:register_element(xml,"achievements_icon_magnate")
   self:register_element(xml,"achievements_name_magnate")
   self:register_element(xml,"achievements_status_magnate_a")
   self:register_element(xml,"achievements_status_magnate_b")
   self:register_element(xml,"achievements_need_title_magnate")
   self:register_element(xml,"achievements_bonus_title_magnate")
   self:register_element(xml,"achievements_need_box_magnate")
   self:register_element(xml,"achievements_bonus_box_magnate")
   self:register_element(xml,"achievements_table_assistant")
   self:register_element(xml,"achievements_icon_assistant")
   self:register_element(xml,"achievements_name_assistant")
   self:register_element(xml,"achievements_status_assistant_a")
   self:register_element(xml,"achievements_status_assistant_b")
   self:register_element(xml,"achievements_need_title_assistant")
   self:register_element(xml,"achievements_bonus_title_assistant")
   self:register_element(xml,"achievements_need_box_assistant")
   self:register_element(xml,"achievements_bonus_box_assistant")
   self:register_element(xml,"achievements_table_lifeguard")
   self:register_element(xml,"achievements_icon_lifeguard")
   self:register_element(xml,"achievements_name_lifeguard")
   self:register_element(xml,"achievements_status_lifeguard_a")
   self:register_element(xml,"achievements_status_lifeguard_b")
   self:register_element(xml,"achievements_need_title_lifeguard")
   self:register_element(xml,"achievements_bonus_title_lifeguard")
   self:register_element(xml,"achievements_need_box_lifeguard")
   self:register_element(xml,"achievements_bonus_box_lifeguard")
   -----------------------
   -- Строки библиотеки --
   -----------------------
   self:register_element(xml,"library_background")
   self:register_element(xml,"library_table_1_main")
   self:register_element(xml,"library_table_1_title")
   self:register_element(xml,"library_table_1_status")
   self:register_element(xml,"library_table_2_main")
   self:register_element(xml,"library_table_2_title")
   self:register_element(xml,"library_table_2_status")
   self:register_element(xml,"library_table_3_main")
   self:register_element(xml,"library_table_3_title")
   self:register_element(xml,"library_table_3_status")
   self:register_element(xml,"library_table_4_main")
   self:register_element(xml,"library_table_4_title")
   self:register_element(xml,"library_table_4_status")
   self:register_element(xml,"library_table_5_main")
   self:register_element(xml,"library_table_5_title")
   self:register_element(xml,"library_table_5_status")
   self:register_element(xml,"library_table_6_main")
   self:register_element(xml,"library_table_6_title")
   self:register_element(xml,"library_table_6_status")
   self:register_element(xml,"library_table_7_main")
   self:register_element(xml,"library_table_7_title")
   self:register_element(xml,"library_table_7_status")
   self:register_element(xml,"library_table_8_main")
   self:register_element(xml,"library_table_8_title")
   self:register_element(xml,"library_table_8_status")
   self:register_element(xml,"library_table_9_main")
   self:register_element(xml,"library_table_9_title")
   self:register_element(xml,"library_table_9_status")
   self:register_element(xml,"library_table_10_main")
   self:register_element(xml,"library_table_10_title")
   self:register_element(xml,"library_table_10_status")
   self:register_element(xml,"library_table_11_main")
   self:register_element(xml,"library_table_11_title")
   self:register_element(xml,"library_table_11_status")
   self:register_element(xml,"library_table_12_main")
   self:register_element(xml,"library_table_12_title")
   self:register_element(xml,"library_table_12_status")
   self:register_element(xml,"library_table_13_main")
   self:register_element(xml,"library_table_13_title")
   self:register_element(xml,"library_table_13_status")
   self:register_element(xml,"library_table_14_main")
   self:register_element(xml,"library_table_14_title")
   self:register_element(xml,"library_table_14_status")
   self:register_element(xml,"library_table_15_main")
   self:register_element(xml,"library_table_15_title")
   self:register_element(xml,"library_table_15_status")
   self:register_element(xml,"library_table_16_main")
   self:register_element(xml,"library_table_16_title")
   self:register_element(xml,"library_table_16_status")
   self:register_element(xml,"library_table_17_main")
   self:register_element(xml,"library_table_17_title")
   self:register_element(xml,"library_table_17_status")
   self:register_element(xml,"library_table_18_main")
   self:register_element(xml,"library_table_18_title")
   self:register_element(xml,"library_table_18_status")
   self:register_element(xml,"library_table_19_main")
   self:register_element(xml,"library_table_19_title")
   self:register_element(xml,"library_table_19_status")
   self:register_element(xml,"library_table_20_main")
   self:register_element(xml,"library_table_20_title")
   self:register_element(xml,"library_table_20_status")
   self:register_element(xml,"library_table_21_main")
   self:register_element(xml,"library_table_21_title")
   self:register_element(xml,"library_table_21_status")
   self:register_element(xml,"library_table_22_main")
   self:register_element(xml,"library_table_22_title")
   self:register_element(xml,"library_table_22_status")
   self:register_element(xml,"library_table_23_main")
   self:register_element(xml,"library_table_23_title")
   self:register_element(xml,"library_table_23_status")
   self:register_element(xml,"library_table_24_main")
   self:register_element(xml,"library_table_24_title")
   self:register_element(xml,"library_table_24_status")
   self:register_element(xml,"library_table_25_main")
   self:register_element(xml,"library_table_25_title")
   self:register_element(xml,"library_table_25_status")
   self:register_element(xml,"library_table_26_main")
   self:register_element(xml,"library_table_26_title")
   self:register_element(xml,"library_table_26_status")
   self:register_element(xml,"library_table_27_main")
   self:register_element(xml,"library_table_27_title")
   self:register_element(xml,"library_table_27_status")
   self:register_element(xml,"library_table_28_main")
   self:register_element(xml,"library_table_28_title")
   self:register_element(xml,"library_table_28_status")
   self:register_element(xml,"library_table_29_main")
   self:register_element(xml,"library_table_29_title")
   self:register_element(xml,"library_table_29_status")
   self:register_element(xml,"library_table_30_main")
   self:register_element(xml,"library_table_30_title")
   self:register_element(xml,"library_table_30_status")
   self:register_element(xml,"library_table_31_main")
   self:register_element(xml,"library_table_31_title")
   self:register_element(xml,"library_table_31_status")
   self:register_element(xml,"library_table_32_main")
   self:register_element(xml,"library_table_32_title")
   self:register_element(xml,"library_table_32_status")
   self:register_element(xml,"library_table_33_main")
   self:register_element(xml,"library_table_33_title")
   self:register_element(xml,"library_table_33_status")
   self:register_element(xml,"library_table_34_main")
   self:register_element(xml,"library_table_34_title")
   self:register_element(xml,"library_table_34_status")
   self:register_element(xml,"library_table_35_main")
   self:register_element(xml,"library_table_35_title")
   self:register_element(xml,"library_table_35_status")
   self:register_element(xml,"library_table_36_main")
   self:register_element(xml,"library_table_36_title")
   self:register_element(xml,"library_table_36_status")
   self:register_element(xml,"library_table_37_main")
   self:register_element(xml,"library_table_37_title")
   self:register_element(xml,"library_table_37_status")
   self:register_element(xml,"library_table_38_main")
   self:register_element(xml,"library_table_38_title")
   self:register_element(xml,"library_table_38_status")
   self:register_element(xml,"library_table_39_main")
   self:register_element(xml,"library_table_39_title")
   self:register_element(xml,"library_table_39_status")
   self:register_element(xml,"library_table_40_main")
   self:register_element(xml,"library_table_40_title")
   self:register_element(xml,"library_table_40_status")
   self:register_element(xml,"library_table_41_main")
   self:register_element(xml,"library_table_41_title")
   self:register_element(xml,"library_table_41_status")
   self:register_element(xml,"library_table_42_main")
   self:register_element(xml,"library_table_42_title")
   self:register_element(xml,"library_table_42_status")
   -----------------------
   -- Строки дипломатии --
   -----------------------
   self:register_button(xml,"diplomatia_button_t_stalkers")
   self:register_button(xml,"diplomatia_button_t_bandits")
   self:register_button(xml,"diplomatia_button_t_dolgs")
   self:register_button(xml,"diplomatia_button_t_freedoms")
   self:register_button(xml,"diplomatia_button_t_killers")
   self:register_button(xml,"diplomatia_button_t_rasvets")
   self:register_element(xml,"diplomatia_check_area")
   self:register_element(xml,"diplomatia_field")
   self:register_element(xml,"diplomatia_table_stalkers")
   self:register_element(xml,"diplomatia_logo_stalkers")
   self:register_element(xml,"diplomatia_title_stalkers")
   self:register_element(xml,"diplomatia_need_title_stalkers")
   self:register_element(xml,"diplomatia_need_box_stalkers")
   self:register_element(xml,"diplomatia_button_b_stalkers")
   self:register_element(xml,"diplomatia_table_bandits")
   self:register_element(xml,"diplomatia_logo_bandits")
   self:register_element(xml,"diplomatia_title_bandits")
   self:register_element(xml,"diplomatia_need_title_bandits")
   self:register_element(xml,"diplomatia_need_box_bandits")
   self:register_element(xml,"diplomatia_button_b_bandits")
   self:register_element(xml,"diplomatia_table_dolgs")
   self:register_element(xml,"diplomatia_logo_dolgs")
   self:register_element(xml,"diplomatia_title_dolgs")
   self:register_element(xml,"diplomatia_need_title_dolgs")
   self:register_element(xml,"diplomatia_need_box_dolgs")
   self:register_element(xml,"diplomatia_button_b_dolgs")
   self:register_element(xml,"diplomatia_table_freedoms")
   self:register_element(xml,"diplomatia_logo_freedoms")
   self:register_element(xml,"diplomatia_title_freedoms")
   self:register_element(xml,"diplomatia_need_title_freedoms")
   self:register_element(xml,"diplomatia_need_box_freedoms")
   self:register_element(xml,"diplomatia_button_b_freedoms")
   self:register_element(xml,"diplomatia_table_killers")
   self:register_element(xml,"diplomatia_logo_killers")
   self:register_element(xml,"diplomatia_title_killers")
   self:register_element(xml,"diplomatia_need_title_killers")
   self:register_element(xml,"diplomatia_need_box_killers")
   self:register_element(xml,"diplomatia_button_b_killers")
   self:register_element(xml,"diplomatia_table_rasvets")
   self:register_element(xml,"diplomatia_logo_rasvets")
   self:register_element(xml,"diplomatia_title_rasvets")
   self:register_element(xml,"diplomatia_need_title_rasvets")
   self:register_element(xml,"diplomatia_need_box_rasvets")
   self:register_element(xml,"diplomatia_button_b_rasvets")
   self:register_check(xml,"diplomatia_agreement_check_friend",sgm_functions.info_get_boolean("agreement_check_friend"))
   self:register_check(xml,"diplomatia_agreement_check_enemy",sgm_functions.info_get_boolean("agreement_check_enemy"))
   -------------------------
   -- Строки оборудований --
   -------------------------
   self.equipments_list=xml:InitListBox("personal_pda_form:equipments_list",self)
   self.equipments_list:ShowSelectedItem(true)
   self:Register(self.equipments_list,"equipments_list_window")
   self:register_element(xml,"equipments_background")
   self:register_element(xml,"equipments_icon_field")
   self:register_element(xml,"equipments_title_field")
   self:register_element(xml,"equipments_descr_field")
   ------------
   -- Списки --
   ------------
   self.statistic_table={
   self.statistic_line_1_title,
   self.statistic_line_1_value,
   self.statistic_line_2_title,
   self.statistic_line_2_value,
   self.statistic_line_3_title,
   self.statistic_line_3_value,
   self.statistic_line_4_title,
   self.statistic_line_4_value,
   self.statistic_line_5_title,
   self.statistic_line_5_value,
   self.statistic_line_6_title,
   self.statistic_line_6_value,
   self.statistic_line_7_title,
   self.statistic_line_7_value,
   self.statistic_line_8_title,
   self.statistic_line_8_value,
   self.statistic_line_9_title,
   self.statistic_line_9_value,
   self.statistic_line_10_title,
   self.statistic_line_10_value,
   self.statistic_line_11_title,
   self.statistic_line_11_value,
   self.statistic_line_12_title,
   self.statistic_line_12_value,
   self.statistic_line_13_title,
   self.statistic_line_13_value,
   self.statistic_line_14_title,
   self.statistic_line_14_value,
   self.statistic_line_15_title,
   self.statistic_line_15_value,
   self.statistic_line_16_title,
   self.statistic_line_16_value,
   self.statistic_line_17_title,
   self.statistic_line_17_value,
   self.statistic_line_18_title,
   self.statistic_line_18_value,
   self.statistic_line_19_title,
   self.statistic_line_19_value,
   self.statistic_line_20_title,
   self.statistic_line_20_value,
   self.statistic_line_21_title,
   self.statistic_line_21_value,
   self.statistic_line_22_title,
   self.statistic_line_22_value,
   self.statistic_line_23_title,
   self.statistic_line_23_value,
   self.statistic_line_24_title,
   self.statistic_line_24_value,
   self.statistic_line_25_title,
   self.statistic_line_25_value,
   self.statistic_line_26_title,
   self.statistic_line_26_value
   }
   self.library_table={
   self.library_table_1_title,
   self.library_table_1_status,
   self.library_table_2_title,
   self.library_table_2_status,
   self.library_table_3_title,
   self.library_table_3_status,
   self.library_table_4_title,
   self.library_table_4_status,
   self.library_table_5_title,
   self.library_table_5_status,
   self.library_table_6_title,
   self.library_table_6_status,
   self.library_table_7_title,
   self.library_table_7_status,
   self.library_table_8_title,
   self.library_table_8_status,
   self.library_table_9_title,
   self.library_table_9_status,
   self.library_table_10_title,
   self.library_table_10_status,
   self.library_table_11_title,
   self.library_table_11_status,
   self.library_table_12_title,
   self.library_table_12_status,
   self.library_table_13_title,
   self.library_table_13_status,
   self.library_table_14_title,
   self.library_table_14_status,
   self.library_table_15_title,
   self.library_table_15_status,
   self.library_table_16_title,
   self.library_table_16_status,
   self.library_table_17_title,
   self.library_table_17_status,
   self.library_table_18_title,
   self.library_table_18_status,
   self.library_table_19_title,
   self.library_table_19_status,
   self.library_table_20_title,
   self.library_table_20_status,
   self.library_table_21_title,
   self.library_table_21_status,
   self.library_table_22_title,
   self.library_table_22_status,
   self.library_table_23_title,
   self.library_table_23_status,
   self.library_table_24_title,
   self.library_table_24_status,
   self.library_table_25_title,
   self.library_table_25_status,
   self.library_table_26_title,
   self.library_table_26_status,
   self.library_table_27_title,
   self.library_table_27_status,
   self.library_table_28_title,
   self.library_table_28_status,
   self.library_table_29_title,
   self.library_table_29_status,
   self.library_table_30_title,
   self.library_table_30_status,
   self.library_table_31_title,
   self.library_table_31_status,
   self.library_table_32_title,
   self.library_table_32_status,
   self.library_table_33_title,
   self.library_table_33_status,
   self.library_table_34_title,
   self.library_table_34_status,
   self.library_table_35_title,
   self.library_table_35_status,
   self.library_table_36_title,
   self.library_table_36_status,
   self.library_table_37_title,
   self.library_table_37_status,
   self.library_table_38_title,
   self.library_table_38_status,
   self.library_table_39_title,
   self.library_table_39_status,
   self.library_table_40_title,
   self.library_table_40_status,
   self.library_table_41_title,
   self.library_table_41_status,
   self.library_table_42_title,
   self.library_table_42_status
   }
   self.library_bools={
   self.library_background,
   self.library_table_1_main,
   self.library_table_2_main,
   self.library_table_3_main,
   self.library_table_4_main,
   self.library_table_5_main,
   self.library_table_6_main,
   self.library_table_7_main,
   self.library_table_8_main,
   self.library_table_9_main,
   self.library_table_10_main,
   self.library_table_11_main,
   self.library_table_12_main,
   self.library_table_13_main,
   self.library_table_14_main,
   self.library_table_15_main,
   self.library_table_16_main,
   self.library_table_17_main,
   self.library_table_18_main,
   self.library_table_19_main,
   self.library_table_20_main,
   self.library_table_21_main,
   self.library_table_22_main,
   self.library_table_23_main,
   self.library_table_24_main,
   self.library_table_25_main,
   self.library_table_26_main,
   self.library_table_27_main,
   self.library_table_28_main,
   self.library_table_29_main,
   self.library_table_30_main,
   self.library_table_31_main,
   self.library_table_32_main,
   self.library_table_33_main,
   self.library_table_34_main,
   self.library_table_35_main,
   self.library_table_36_main,
   self.library_table_37_main,
   self.library_table_38_main,
   self.library_table_39_main,
   self.library_table_40_main,
   self.library_table_41_main,
   self.library_table_42_main
   }
   self.achievements_table_1={
   self.achievements_name_sniper,
   self.achievements_status_sniper_a,
   self.achievements_status_sniper_b,
   self.achievements_need_title_sniper,
   self.achievements_bonus_title_sniper,
   self.achievements_need_box_sniper,
   self.achievements_bonus_box_sniper,
   self.achievements_name_legend,
   self.achievements_status_legend_a,
   self.achievements_status_legend_b,
   self.achievements_need_title_legend,
   self.achievements_bonus_title_legend,
   self.achievements_need_box_legend,
   self.achievements_bonus_box_legend,
   self.achievements_name_pathfinder,
   self.achievements_status_pathfinder_a,
   self.achievements_status_pathfinder_b,
   self.achievements_need_title_pathfinder,
   self.achievements_bonus_title_pathfinder,
   self.achievements_need_box_pathfinder,
   self.achievements_bonus_box_pathfinder,
   self.achievements_name_guidebook,
   self.achievements_status_guidebook_a,
   self.achievements_status_guidebook_b,
   self.achievements_need_title_guidebook,
   self.achievements_bonus_title_guidebook,
   self.achievements_need_box_guidebook,
   self.achievements_bonus_box_guidebook
   }
   self.achievements_table_2={
   self.achievements_name_marauder,
   self.achievements_status_marauder_a,
   self.achievements_status_marauder_b,
   self.achievements_need_title_marauder,
   self.achievements_bonus_title_marauder,
   self.achievements_need_box_marauder,
   self.achievements_bonus_box_marauder,
   self.achievements_name_magnate,
   self.achievements_status_magnate_a,
   self.achievements_status_magnate_b,
   self.achievements_need_title_magnate,
   self.achievements_bonus_title_magnate,
   self.achievements_need_box_magnate,
   self.achievements_bonus_box_magnate,
   self.achievements_name_assistant,
   self.achievements_status_assistant_a,
   self.achievements_status_assistant_b,
   self.achievements_need_title_assistant,
   self.achievements_bonus_title_assistant,
   self.achievements_need_box_assistant,
   self.achievements_bonus_box_assistant,
   self.achievements_name_lifeguard,
   self.achievements_status_lifeguard_a,
   self.achievements_status_lifeguard_b,
   self.achievements_need_title_lifeguard,
   self.achievements_bonus_title_lifeguard,
   self.achievements_need_box_lifeguard,
   self.achievements_bonus_box_lifeguard
   }
   self.achievements_bools_1={
   self.achievements_field,
   self.achievements_table_sniper,
   self.achievements_icon_sniper,
   self.achievements_table_legend,
   self.achievements_icon_legend,
   self.achievements_table_pathfinder,
   self.achievements_icon_pathfinder,
   self.achievements_table_guidebook,
   self.achievements_icon_guidebook
   }
   self.achievements_bools_2={
   self.achievements_table_marauder,
   self.achievements_icon_marauder,
   self.achievements_table_magnate,
   self.achievements_icon_magnate,
   self.achievements_table_assistant,
   self.achievements_icon_assistant,
   self.achievements_table_lifeguard,
   self.achievements_icon_lifeguard
   }
   self.diplomatia_table={
   self.diplomatia_title_stalkers,
   self.diplomatia_need_title_stalkers,
   self.diplomatia_need_box_stalkers,
   self.diplomatia_button_t_stalkers,
   self.diplomatia_title_bandits,
   self.diplomatia_need_title_bandits,
   self.diplomatia_need_box_bandits,
   self.diplomatia_button_t_bandits,
   self.diplomatia_title_dolgs,
   self.diplomatia_need_title_dolgs,
   self.diplomatia_need_box_dolgs,
   self.diplomatia_button_t_dolgs,
   self.diplomatia_title_freedoms,
   self.diplomatia_need_title_freedoms,
   self.diplomatia_need_box_freedoms,
   self.diplomatia_button_t_freedoms,
   self.diplomatia_title_killers,
   self.diplomatia_need_title_killers,
   self.diplomatia_need_box_killers,
   self.diplomatia_button_t_killers,
   self.diplomatia_title_rasvets,
   self.diplomatia_need_title_rasvets,
   self.diplomatia_need_box_rasvets,
   self.diplomatia_button_t_rasvets
   }
   self.diplomatia_bools={
   self.diplomatia_field,
   self.diplomatia_check_area,
   self.diplomatia_table_stalkers,
   self.diplomatia_logo_stalkers,
   self.diplomatia_button_b_stalkers,
   self.diplomatia_table_bandits,
   self.diplomatia_logo_bandits,
   self.diplomatia_button_b_bandits,
   self.diplomatia_table_dolgs,
   self.diplomatia_logo_dolgs,
   self.diplomatia_button_b_dolgs,
   self.diplomatia_table_freedoms,
   self.diplomatia_logo_freedoms,
   self.diplomatia_button_b_freedoms,
   self.diplomatia_table_killers,
   self.diplomatia_logo_killers,
   self.diplomatia_button_b_killers,
   self.diplomatia_table_rasvets,
   self.diplomatia_logo_rasvets,
   self.diplomatia_button_b_rasvets,
   self.diplomatia_agreement_check_enemy,
   self.diplomatia_agreement_check_friend
   }
   self.equipments_table={
   self.equipments_title_field,
   self.equipments_descr_field
   }
   self.equipments_bools={
   self.equipments_background,
   self.equipments_icon_field,
   self.equipments_list
   }
   --------------------------
   -- Инициализация блоков --
   --------------------------
   self:register_message_box("help_box")
   self:register_message_box("diplomatia_box_fail")
   self:register_message_box("diplomatia_box_no_location")
   self:register_message_box("diplomatia_box_stalkers")
   self:register_message_box("diplomatia_box_stalkers_final")
   self:register_message_box("diplomatia_box_bandits")
   self:register_message_box("diplomatia_box_bandits_final")
   self:register_message_box("diplomatia_box_dolgs")
   self:register_message_box("diplomatia_box_dolgs_final")
   self:register_message_box("diplomatia_box_freedoms")
   self:register_message_box("diplomatia_box_freedoms_final")
   self:register_message_box("diplomatia_box_killers")
   self:register_message_box("diplomatia_box_killers_final")
   self:register_message_box("diplomatia_box_rasvets")
   self:register_message_box("diplomatia_box_rasvets_final")
end
function personal_pda:InitCallBacks()
   self:AddCallback("btn_off_pda",ui_events.BUTTON_CLICKED,self.btn_off_pda,self)
   self:AddCallback("tab_statistic",ui_events.BUTTON_CLICKED,self.tab_statistic,self)
   self:AddCallback("tab_advices",ui_events.BUTTON_CLICKED,self.tab_advices,self)
   self:AddCallback("tab_achievements",ui_events.BUTTON_CLICKED,self.tab_achievements,self)
   self:AddCallback("tab_library",ui_events.BUTTON_CLICKED,self.tab_library,self)
   self:AddCallback("tab_diplomatia",ui_events.BUTTON_CLICKED,self.tab_diplomatia,self)
   self:AddCallback("tab_equipments",ui_events.BUTTON_CLICKED,self.tab_equipments,self)
   self:AddCallback("about_cheat_achievement_page",ui_events.BUTTON_CLICKED,self.tab_about_cheat_achievement_page,self)
   self:AddCallback("achievements_next_page",ui_events.BUTTON_CLICKED,self.tab_achievements_next_page,self)
   self:AddCallback("achievements_back_page",ui_events.BUTTON_CLICKED,self.tab_achievements_back_page,self)
   self:AddCallback("statistic_killed_page",ui_events.BUTTON_CLICKED,self.tab_statistic_killed_page,self)
   self:AddCallback("statistic_home_page",ui_events.BUTTON_CLICKED,self.tab_statistic_home_page,self)
   self:AddCallback("statistic_community_page",ui_events.BUTTON_CLICKED,self.tab_statistic_community_page,self)
   self:AddCallback("statistic_previous_page",ui_events.BUTTON_CLICKED,self.tab_statistic_previous_page,self)
   self:AddCallback("library_next_page",ui_events.BUTTON_CLICKED,self.tab_library_next_page,self)
   self:AddCallback("library_back_page",ui_events.BUTTON_CLICKED,self.tab_library_back_page,self)
   self:AddCallback("equipments_list_window",ui_events.WINDOW_LBUTTON_DB_CLICK,self.select_equipments,self)
   self:AddCallback("help_box",ui_events.MESSAGE_BOX_YES_CLICKED,self.help_box_ok,self)
   self:AddCallback("help_box",ui_events.MESSAGE_BOX_OK_CLICKED,self.help_box_ok,self)
   self:AddCallback("diplomatia_button_t_stalkers",ui_events.BUTTON_CLICKED,self.button_t_stalkers,self)
   self:AddCallback("diplomatia_button_t_bandits",ui_events.BUTTON_CLICKED,self.button_t_bandits,self)
   self:AddCallback("diplomatia_button_t_dolgs",ui_events.BUTTON_CLICKED,self.button_t_dolgs,self)
   self:AddCallback("diplomatia_button_t_freedoms",ui_events.BUTTON_CLICKED,self.button_t_freedoms,self)
   self:AddCallback("diplomatia_button_t_killers",ui_events.BUTTON_CLICKED,self.button_t_killers,self)
   self:AddCallback("diplomatia_button_t_rasvets",ui_events.BUTTON_CLICKED,self.button_t_rasvets,self)
   self:AddCallback("diplomatia_box_fail",ui_events.MESSAGE_BOX_OK_CLICKED,self.diplomatia_box_fail_ok,self)
   self:AddCallback("diplomatia_box_no_location",ui_events.MESSAGE_BOX_OK_CLICKED,self.diplomatia_box_no_location_ok,self)
   self:AddCallback("diplomatia_box_stalkers",ui_events.MESSAGE_BOX_YES_CLICKED,self.diplomatia_box_stalkers_yes,self)
   self:AddCallback("diplomatia_box_stalkers",ui_events.MESSAGE_BOX_NO_CLICKED,self.diplomatia_box_stalkers_no,self)
   self:AddCallback("diplomatia_box_stalkers_final",ui_events.MESSAGE_BOX_OK_CLICKED,self.diplomatia_box_stalkers_final_ok,self)
   self:AddCallback("diplomatia_box_bandits",ui_events.MESSAGE_BOX_YES_CLICKED,self.diplomatia_box_bandits_yes,self)
   self:AddCallback("diplomatia_box_bandits",ui_events.MESSAGE_BOX_NO_CLICKED,self.diplomatia_box_bandits_no,self)
   self:AddCallback("diplomatia_box_bandits_final",ui_events.MESSAGE_BOX_OK_CLICKED,self.diplomatia_box_bandits_final_ok,self)
   self:AddCallback("diplomatia_box_dolgs",ui_events.MESSAGE_BOX_YES_CLICKED,self.diplomatia_box_dolgs_yes,self)
   self:AddCallback("diplomatia_box_dolgs",ui_events.MESSAGE_BOX_NO_CLICKED,self.diplomatia_box_dolgs_no,self)
   self:AddCallback("diplomatia_box_dolgs_final",ui_events.MESSAGE_BOX_OK_CLICKED,self.diplomatia_box_dolgs_final_ok,self)
   self:AddCallback("diplomatia_box_freedoms",ui_events.MESSAGE_BOX_YES_CLICKED,self.diplomatia_box_freedoms_yes,self)
   self:AddCallback("diplomatia_box_freedoms",ui_events.MESSAGE_BOX_NO_CLICKED,self.diplomatia_box_freedoms_no,self)
   self:AddCallback("diplomatia_box_freedoms_final",ui_events.MESSAGE_BOX_OK_CLICKED,self.diplomatia_box_freedoms_final_ok,self)
   self:AddCallback("diplomatia_box_killers",ui_events.MESSAGE_BOX_YES_CLICKED,self.diplomatia_box_killers_yes,self)
   self:AddCallback("diplomatia_box_killers",ui_events.MESSAGE_BOX_NO_CLICKED,self.diplomatia_box_killers_no,self)
   self:AddCallback("diplomatia_box_killers_final",ui_events.MESSAGE_BOX_OK_CLICKED,self.diplomatia_box_killers_final_ok,self)
   self:AddCallback("diplomatia_box_rasvets",ui_events.MESSAGE_BOX_YES_CLICKED,self.diplomatia_box_rasvets_yes,self)
   self:AddCallback("diplomatia_box_rasvets",ui_events.MESSAGE_BOX_NO_CLICKED,self.diplomatia_box_rasvets_no,self)
   self:AddCallback("diplomatia_box_rasvets_final",ui_events.MESSAGE_BOX_OK_CLICKED,self.diplomatia_box_rasvets_final_ok,self)
end
------------------------------------------------------------------------------
--                                 Навигация                                --
------------------------------------------------------------------------------
function personal_pda:tab_statistic()
   self.pda_section=1
   self.equipments_list:Clear()
end
function personal_pda:tab_statistic_killed_page()
   if self.pda_section==1 then
      self.pda_section=1.5
      self.equipments_list:Clear()
   end
end
function personal_pda:tab_statistic_home_page()
   if self.pda_section==1.5 then
      self.pda_section=1
      self.equipments_list:Clear()
   end
end
function personal_pda:tab_statistic_community_page()
   if self.pda_section==1.5 then
      self.pda_section=1.8
      self.equipments_list:Clear()
   end
end
function personal_pda:tab_statistic_previous_page()
   if self.pda_section==1.8 then
      self.pda_section=1.5
      self.equipments_list:Clear()
   end
end
function personal_pda:tab_advices()
   self.pda_section=2
   self.equipments_list:Clear()
end
function personal_pda:tab_achievements()
   self.pda_section=3
   self.equipments_list:Clear()
end
function personal_pda:tab_about_cheat_achievement_page()
   if self.pda_section==3 then
      self.help_box:InitMessageBox("mb_pda_about_legend_box")
      self.help_box:ShowDialog(true)
      self.equipments_list:Clear()
   end
end
function personal_pda:tab_achievements_next_page()
   if self.pda_section==3 then
      self.pda_section=3.5
      self.equipments_list:Clear()
   end
end
function personal_pda:tab_achievements_back_page()
   if self.pda_section==3.5 then
      self.pda_section=3
      self.equipments_list:Clear()
   end
end
function personal_pda:tab_diplomatia()
   self.pda_section=4
   self.equipments_list:Clear()
end
function personal_pda:tab_library()
   self.pda_section=5
   self.equipments_list:Clear()
end
function personal_pda:tab_library_next_page()
   if self.pda_section==5 then
      self.pda_section=5.5
      self.equipments_list:Clear()
   end
end
function personal_pda:tab_library_back_page()
   if self.pda_section==5.5 then
      self.pda_section=5
      self.equipments_list:Clear()
   end
end
function personal_pda:tab_equipments()
   self.pda_section=6
   self:FillListE(self.equipments_section)
end
------------------------------------------------------------------------------
--                                 Обновление                               --
------------------------------------------------------------------------------
function personal_pda:Update()
   CUIScriptWnd.Update(self)
   if not object_alive(db.mp_actor) then
      self:btn_close()
   end
   for k,v in pairs(self.equipments_processing) do
      if v.flg==0 and db.mp_actor:item_in_slot(v.item_slot)~=nil and db.mp_actor:item_in_slot(v.item_slot):section()~=nil then
         table.insert(self.equipments_section,db.mp_actor:item_in_slot(v.item_slot):section())
         v.flg=1
      end
   end
   self.pda_game_time:TextControl():SetText(get_parsed_time())
   -- Первая страница КПК --
   if self.pda_section==0 then
      self:exclude_unnecessary_for(0)
   -- При нажатии на статистике общей --
   elseif self.pda_section==1 then
      self:exclude_unnecessary_for(1)
      --/Блоки статистики
      self.statistic_line_1_title:TextControl():SetText(game.translate_string("st_statistic_gruppirovka"))
      self.statistic_line_1_value:TextControl():SetText(game.translate_string(sgm_functions.read_variable("stat_community")))
      self.statistic_line_2_title:TextControl():SetText(game.translate_string("st_statistic_actor_health"))
      self.statistic_line_2_value:TextControl():SetText(string.format(math.floor(db.mp_actor.health*100)) .."%")
      self.statistic_line_3_title:TextControl():SetText(game.translate_string("st_statistic_actor_psi"))
      self.statistic_line_3_value:TextControl():SetText(string.format(math.floor(db.mp_actor.psy_health*100)) .."%")
      self.statistic_line_4_title:TextControl():SetText(game.translate_string("st_statistic_zarabotano_web_money"))
      self.statistic_line_4_value:TextControl():SetText(math.floor(sgm_functions.read_variable("actor_web_money")))
      self.statistic_line_5_title:TextControl():SetText(game.translate_string("st_statistic_actor_rank"))
      self.statistic_line_5_value:TextControl():SetText(xr_statistic.get_actor_rank())
      self.statistic_line_6_title:TextControl():SetText(game.translate_string("st_statistic_weapon_shots"))
      self.statistic_line_6_value:TextControl():SetText(sgm_functions.read_variable("stat_weapon_shots"))
      self.statistic_line_7_title:TextControl():SetText(game.translate_string("st_statistic_head_shots"))
      self.statistic_line_7_value:TextControl():SetText(sgm_functions.read_variable("stat_headshots"))
      self.statistic_line_8_title:TextControl():SetText(game.translate_string("st_statistic_knig_viucheno"))
      self.statistic_line_8_value:TextControl():SetText(sgm_functions.read_variable("stat_books"))
      self.statistic_line_9_title:TextControl():SetText(game.translate_string("st_statistic_vipolneno_kvestov"))
      self.statistic_line_9_value:TextControl():SetText(sgm_functions.read_variable("stat_kvestov"))
      self.statistic_line_10_title:TextControl():SetText(game.translate_string("st_statistic_naydeno_taynikov"))
      self.statistic_line_10_value:TextControl():SetText(sgm_functions.read_variable("stat_taynikov"))
      self.statistic_line_11_title:TextControl():SetText(game.translate_string("st_statistic_habara_naydeno"))
      self.statistic_line_11_value:TextControl():SetText(sgm_functions.read_variable("stat_deserves"))
      self.statistic_line_12_title:TextControl():SetText(game.translate_string("st_statistic_polucheno_dostigeniy"))
      self.statistic_line_12_value:TextControl():SetText(sgm_functions.read_variable("stat_dostigeniy"))
      self.statistic_line_13_title:TextControl():SetText(game.translate_string("st_statistic_polucheno_medaley"))
      self.statistic_line_13_value:TextControl():SetText(sgm_functions.read_variable("stat_medaley"))
      self.statistic_line_14_title:TextControl():SetText(game.translate_string("st_statistic_ubito_bossov"))
      self.statistic_line_14_value:TextControl():SetText(sgm_functions.read_variable("stat_ubil_bosov"))
      self.statistic_line_15_title:TextControl():SetText(game.translate_string("st_statistic_sobral_s_trupov"))
      self.statistic_line_15_value:TextControl():SetText(sgm_functions.read_variable("stat_s_trupov"))
      self.statistic_line_16_title:TextControl():SetText(game.translate_string("st_statistic_ispolzoval_gps_provodnikov"))
      self.statistic_line_16_value:TextControl():SetText(sgm_functions.read_variable("stat_guidebook"))
      self.statistic_line_17_title:TextControl():SetText(game.translate_string("st_statistic_dengi_na_deposite"))
      self.statistic_line_17_value:TextControl():SetText(sgm_functions.read_variable("bankir_deposit_cash"))
      self.statistic_line_18_title:TextControl():SetText(game.translate_string("st_statistic_okazano_pomosch_ranenim"))
      self.statistic_line_18_value:TextControl():SetText(sgm_functions.read_variable("stat_help_wounded"))
      self.statistic_line_19_title:TextControl():SetText("")
      self.statistic_line_19_value:TextControl():SetText("")
      self.statistic_line_20_title:TextControl():SetText("")
      self.statistic_line_20_value:TextControl():SetText("")
      self.statistic_line_21_title:TextControl():SetText("")
      self.statistic_line_21_value:TextControl():SetText("")
      self.statistic_line_22_title:TextControl():SetText("")
      self.statistic_line_22_value:TextControl():SetText("")
      self.statistic_line_23_title:TextControl():SetText("")
      self.statistic_line_23_value:TextControl():SetText("")
      self.statistic_line_24_title:TextControl():SetText("")
      self.statistic_line_24_value:TextControl():SetText("")
      self.statistic_line_25_title:TextControl():SetText("")
      self.statistic_line_25_value:TextControl():SetText("")
      self.statistic_line_26_title:TextControl():SetText("")
      self.statistic_line_26_value:TextControl():SetText("")
   -- При нажатии на статистике убийств --
   elseif self.pda_section==1.5 then
      self:exclude_unnecessary_for(1.5)
      --/Блоки статистики
      self.statistic_line_1_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_title"))
      self.statistic_line_1_value:TextControl():SetText("")
      self.statistic_line_2_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_1_name"))
      self.statistic_line_2_value:TextControl():SetText(self:get_statistic_killed("s","alfa").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_3_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_2_name"))
      self.statistic_line_3_value:TextControl():SetText(self:get_statistic_killed("s","army").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_4_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_3_name"))
      self.statistic_line_4_value:TextControl():SetText(self:get_statistic_killed("s","bandit").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_5_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_4_name"))
      self.statistic_line_5_value:TextControl():SetText(self:get_statistic_killed("s","dolg").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_6_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_5_name"))
      self.statistic_line_6_value:TextControl():SetText(self:get_statistic_killed("s","ecolog").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_7_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_6_name"))
      self.statistic_line_7_value:TextControl():SetText(self:get_statistic_killed("s","freedom").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_8_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_7_name"))
      self.statistic_line_8_value:TextControl():SetText(self:get_statistic_killed("s","killer").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_9_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_8_name"))
      self.statistic_line_9_value:TextControl():SetText(self:get_statistic_killed("s","monolith").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_10_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_9_name"))
      self.statistic_line_10_value:TextControl():SetText(self:get_statistic_killed("s","stalker").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_11_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_10_name"))
      self.statistic_line_11_value:TextControl():SetText(self:get_statistic_killed("s","rasvet").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_12_title:TextControl():SetText(game.translate_string("st_statistic_killed_s_11_name"))
      self.statistic_line_12_value:TextControl():SetText(self:get_statistic_killed("s","zombied").." "..game.translate_string("st_statistic_killed_s_count"))
      self.statistic_line_13_title:TextControl():SetText("")
      self.statistic_line_13_value:TextControl():SetText("")
      self.statistic_line_14_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_title"))
      self.statistic_line_14_value:TextControl():SetText("")
      self.statistic_line_15_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_1_name"))
      self.statistic_line_15_value:TextControl():SetText(self:get_statistic_killed("m","bloodsucker").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_16_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_2_name"))
      self.statistic_line_16_value:TextControl():SetText(self:get_statistic_killed("m","boar").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_17_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_3_name"))
      self.statistic_line_17_value:TextControl():SetText(self:get_statistic_killed("m","burer").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_18_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_4_name"))
      self.statistic_line_18_value:TextControl():SetText(self:get_statistic_killed("m","chimera").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_19_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_5_name"))
      self.statistic_line_19_value:TextControl():SetText(self:get_statistic_killed("m","controller").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_20_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_6_name"))
      self.statistic_line_20_value:TextControl():SetText(self:get_statistic_killed("m","dog").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_21_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_7_name"))
      self.statistic_line_21_value:TextControl():SetText(self:get_statistic_killed("m","flesh").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_22_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_8_name"))
      self.statistic_line_22_value:TextControl():SetText(self:get_statistic_killed("m","gigant").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_23_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_9_name"))
      self.statistic_line_23_value:TextControl():SetText(self:get_statistic_killed("m","poltergeist").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_24_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_10_name"))
      self.statistic_line_24_value:TextControl():SetText(self:get_statistic_killed("m","pseudodog").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_25_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_11_name"))
      self.statistic_line_25_value:TextControl():SetText(self:get_statistic_killed("m","snork").." "..game.translate_string("st_statistic_killed_m_count"))
      self.statistic_line_26_title:TextControl():SetText(game.translate_string("st_statistic_killed_m_12_name"))
      self.statistic_line_26_value:TextControl():SetText(self:get_statistic_killed("m","tushkano").." "..game.translate_string("st_statistic_killed_m_count"))
   -- При нажатии на статистике отношений --
   elseif self.pda_section==1.8 then
      self:exclude_unnecessary_for(1.8)
   -- При нажатии на советах --
   elseif self.pda_section==2 then
      self:exclude_unnecessary_for(2)
      self.advices_field:TextControl():SetText(game.translate_string("st_advices_text"))
   -- При нажатии на достижениях 1 --
   elseif self.pda_section==3 then
      self:exclude_unnecessary_for(3)
      --/«Ворошиловский стрелок»/--
      self.achievements_table_sniper:Show(true)
      self.achievements_icon_sniper:Show(true)
      self.achievements_name_sniper:TextControl():SetText(game.translate_string("st_achievements_name_sniper"))
      self.achievements_status_sniper_a:TextControl():SetText(game.translate_string("st_achievements_status_a"))
      self.achievements_status_sniper_b:TextControl():SetText(game.translate_string(self.achievements_sniper_status))
      self.achievements_need_title_sniper:TextControl():SetText(game.translate_string("st_achievements_need_title"))
      self.achievements_bonus_title_sniper:TextControl():SetText(game.translate_string("st_achievements_bonus_title"))
      self.achievements_need_box_sniper:TextControl():SetText(game.translate_string("st_achievements_need_sniper"))
      self.achievements_bonus_box_sniper:TextControl():SetText(game.translate_string("st_achievements_bonus_sniper"))
      --/«Легендарный сталкер»/--
      self.achievements_table_legend:Show(true)
      self.achievements_icon_legend:Show(true)
      self.achievements_name_legend:TextControl():SetText(game.translate_string("st_achievements_name_legend"))
      self.achievements_status_legend_a:TextControl():SetText(game.translate_string("st_achievements_status_a"))
      self.achievements_status_legend_b:TextControl():SetText(game.translate_string(self.achievements_legend_status))
      self.achievements_need_title_legend:TextControl():SetText(game.translate_string("st_achievements_need_title"))
      self.achievements_bonus_title_legend:TextControl():SetText(game.translate_string("st_achievements_bonus_title"))
      self.achievements_need_box_legend:TextControl():SetText(game.translate_string("st_achievements_need_legend"))
      self.achievements_bonus_box_legend:TextControl():SetText(game.translate_string("st_achievements_bonus_legend"))
      --/«Ловкий следопыт»/--
      self.achievements_table_pathfinder:Show(true)
      self.achievements_icon_pathfinder:Show(true)
      self.achievements_name_pathfinder:TextControl():SetText(game.translate_string("st_achievements_name_pathfinder"))
      self.achievements_status_pathfinder_a:TextControl():SetText(game.translate_string("st_achievements_status_a"))
      self.achievements_status_pathfinder_b:TextControl():SetText(game.translate_string(self.achievements_pathfinder_status))
      self.achievements_need_title_pathfinder:TextControl():SetText(game.translate_string("st_achievements_need_title"))
      self.achievements_bonus_title_pathfinder:TextControl():SetText(game.translate_string("st_achievements_bonus_title"))
      self.achievements_need_box_pathfinder:TextControl():SetText(game.translate_string("st_achievements_need_pathfinder"))
      self.achievements_bonus_box_pathfinder:TextControl():SetText(game.translate_string("st_achievements_bonus_pathfinder"))
      --/«Аномальный проводник»/--
      self.achievements_table_guidebook:Show(true)
      self.achievements_icon_guidebook:Show(true)
      self.achievements_name_guidebook:TextControl():SetText(game.translate_string("st_achievements_name_guidebook"))
      self.achievements_status_guidebook_a:TextControl():SetText(game.translate_string("st_achievements_status_a"))
      self.achievements_status_guidebook_b:TextControl():SetText(game.translate_string(self.achievements_guidebook_status))
      self.achievements_need_title_guidebook:TextControl():SetText(game.translate_string("st_achievements_need_title"))
      self.achievements_bonus_title_guidebook:TextControl():SetText(game.translate_string("st_achievements_bonus_title"))
      self.achievements_need_box_guidebook:TextControl():SetText(game.translate_string("st_achievements_need_guidebook"))
      self.achievements_bonus_box_guidebook:TextControl():SetText(game.translate_string("st_achievements_bonus_guidebook"))
   -- При нажатии на достижениях 2 --
   elseif self.pda_section==3.5 then
      self:exclude_unnecessary_for(3.5)
      --/«Великий мародер»/--
      self.achievements_table_marauder:Show(true)
      self.achievements_icon_marauder:Show(true)
      self.achievements_name_marauder:TextControl():SetText(game.translate_string("st_achievements_name_marauder"))
      self.achievements_status_marauder_a:TextControl():SetText(game.translate_string("st_achievements_status_a"))
      self.achievements_status_marauder_b:TextControl():SetText(game.translate_string(self.achievements_marauder_status))
      self.achievements_need_title_marauder:TextControl():SetText(game.translate_string("st_achievements_need_title"))
      self.achievements_bonus_title_marauder:TextControl():SetText(game.translate_string("st_achievements_bonus_title"))
      self.achievements_need_box_marauder:TextControl():SetText(game.translate_string("st_achievements_need_marauder"))
      self.achievements_bonus_box_marauder:TextControl():SetText(game.translate_string("st_achievements_bonus_marauder"))
      --/«Электронный магнат»/--
      self.achievements_table_magnate:Show(true)
      self.achievements_icon_magnate:Show(true)
      self.achievements_name_magnate:TextControl():SetText(game.translate_string("st_achievements_name_magnate"))
      self.achievements_status_magnate_a:TextControl():SetText(game.translate_string("st_achievements_status_a"))
      self.achievements_status_magnate_b:TextControl():SetText(game.translate_string(self.achievements_magnate_status))
      self.achievements_need_title_magnate:TextControl():SetText(game.translate_string("st_achievements_need_title"))
      self.achievements_bonus_title_magnate:TextControl():SetText(game.translate_string("st_achievements_bonus_title"))
      self.achievements_need_box_magnate:TextControl():SetText(game.translate_string("st_achievements_need_magnate"))
      self.achievements_bonus_box_magnate:TextControl():SetText(game.translate_string("st_achievements_bonus_magnate"))
      --/«Помощник техника»/--
      self.achievements_table_assistant:Show(true)
      self.achievements_icon_assistant:Show(true)
      self.achievements_name_assistant:TextControl():SetText(game.translate_string("st_achievements_name_assistant"))
      self.achievements_status_assistant_a:TextControl():SetText(game.translate_string("st_achievements_status_a"))
      self.achievements_status_assistant_b:TextControl():SetText(game.translate_string(self.achievements_assistant_status))
      self.achievements_need_title_assistant:TextControl():SetText(game.translate_string("st_achievements_need_title"))
      self.achievements_bonus_title_assistant:TextControl():SetText(game.translate_string("st_achievements_bonus_title"))
      self.achievements_need_box_assistant:TextControl():SetText(game.translate_string("st_achievements_need_assistant"))
      self.achievements_bonus_box_assistant:TextControl():SetText(game.translate_string("st_achievements_bonus_assistant"))
      --/«Благородный спасатель»/--
      self.achievements_table_lifeguard:Show(true)
      self.achievements_icon_lifeguard:Show(true)
      self.achievements_name_lifeguard:TextControl():SetText(game.translate_string("st_achievements_name_lifeguard"))
      self.achievements_status_lifeguard_a:TextControl():SetText(game.translate_string("st_achievements_status_a"))
      self.achievements_status_lifeguard_b:TextControl():SetText(game.translate_string(self.achievements_lifeguard_status))
      self.achievements_need_title_lifeguard:TextControl():SetText(game.translate_string("st_achievements_need_title"))
      self.achievements_bonus_title_lifeguard:TextControl():SetText(game.translate_string("st_achievements_bonus_title"))
      self.achievements_need_box_lifeguard:TextControl():SetText(game.translate_string("st_achievements_need_lifeguard"))
      self.achievements_bonus_box_lifeguard:TextControl():SetText(game.translate_string("st_achievements_bonus_lifeguard"))
   -- При нажатии по дипломатии --
   elseif self.pda_section==4 then
      self:exclude_unnecessary_for(4)
      --/«Сталкеры»/--
      self.diplomatia_table_stalkers:Show(true)
      self.diplomatia_logo_stalkers:Show(true)
      self.diplomatia_title_stalkers:TextControl():SetText(game.translate_string("st_diplomatia_community_stalkers"))
      self.diplomatia_need_title_stalkers:TextControl():SetText(game.translate_string("st_diplomatia_need_title"))
      self.diplomatia_need_box_stalkers:TextControl():SetText(game.translate_string("st_diplomatia_need_stalkers"))
      self.diplomatia_button_b_stalkers:Show(true)
      --/«Бандиты»/--
      self.diplomatia_table_bandits:Show(true)
      self.diplomatia_logo_bandits:Show(true)
      self.diplomatia_title_bandits:TextControl():SetText(game.translate_string("st_diplomatia_community_bandits"))
      self.diplomatia_need_title_bandits:TextControl():SetText(game.translate_string("st_diplomatia_need_title"))
      self.diplomatia_need_box_bandits:TextControl():SetText(game.translate_string("st_diplomatia_need_bandits"))
      self.diplomatia_button_b_bandits:Show(true)
      --/«Долг»/--
      self.diplomatia_table_dolgs:Show(true)
      self.diplomatia_logo_dolgs:Show(true)
      self.diplomatia_title_dolgs:TextControl():SetText(game.translate_string("st_diplomatia_community_dolgs"))
      self.diplomatia_need_title_dolgs:TextControl():SetText(game.translate_string("st_diplomatia_need_title"))
      self.diplomatia_need_box_dolgs:TextControl():SetText(game.translate_string("st_diplomatia_need_dolgs"))
      self.diplomatia_button_b_dolgs:Show(true)
      --/«Свобода»/--
      self.diplomatia_table_freedoms:Show(true)
      self.diplomatia_logo_freedoms:Show(true)
      self.diplomatia_title_freedoms:TextControl():SetText(game.translate_string("st_diplomatia_community_freedoms"))
      self.diplomatia_need_title_freedoms:TextControl():SetText(game.translate_string("st_diplomatia_need_title"))
      self.diplomatia_need_box_freedoms:TextControl():SetText(game.translate_string("st_diplomatia_need_freedoms"))
      self.diplomatia_button_b_freedoms:Show(true)
      --/«Наёмники»/--
      self.diplomatia_table_killers:Show(true)
      self.diplomatia_logo_killers:Show(true)
      self.diplomatia_title_killers:TextControl():SetText(game.translate_string("st_diplomatia_community_killers"))
      self.diplomatia_need_title_killers:TextControl():SetText(game.translate_string("st_diplomatia_need_title"))
      self.diplomatia_need_box_killers:TextControl():SetText(game.translate_string("st_diplomatia_need_killers"))
      self.diplomatia_button_b_killers:Show(true)
      --/«Рассвет»/--
      self.diplomatia_table_rasvets:Show(true)
      self.diplomatia_logo_rasvets:Show(true)
      self.diplomatia_title_rasvets:TextControl():SetText(game.translate_string("st_diplomatia_community_rasvets"))
      self.diplomatia_need_title_rasvets:TextControl():SetText(game.translate_string("st_diplomatia_need_title"))
      self.diplomatia_need_box_rasvets:TextControl():SetText(game.translate_string("st_diplomatia_need_rasvets"))
      self.diplomatia_button_b_rasvets:Show(true)
   -- При нажатии по библиотеке --
   elseif self.pda_section==5 then
      self:exclude_unnecessary_for(5)
      self.library_table_1_main:Show(true)
      self.library_table_1_title:TextControl():SetText(self:parse_book_title("skill_book_knife"))
      self.library_table_1_status:TextControl():SetText(self:parse_book_status("skill_book_knife"))
      self.library_table_2_main:Show(true)
      self.library_table_2_title:TextControl():SetText(self:parse_book_title("skill_book_ak74"))
      self.library_table_2_status:TextControl():SetText(self:parse_book_status("skill_book_ak74"))
      self.library_table_3_main:Show(true)
      self.library_table_3_title:TextControl():SetText(self:parse_book_title("skill_book_ak101"))
      self.library_table_3_status:TextControl():SetText(self:parse_book_status("skill_book_ak101"))
      self.library_table_4_main:Show(true)
      self.library_table_4_title:TextControl():SetText(self:parse_book_title("skill_book_ak74u"))
      self.library_table_4_status:TextControl():SetText(self:parse_book_status("skill_book_ak74u"))
      self.library_table_5_main:Show(true)
      self.library_table_5_title:TextControl():SetText(self:parse_book_title("skill_book_abakan"))
      self.library_table_5_status:TextControl():SetText(self:parse_book_status("skill_book_abakan"))
      self.library_table_6_main:Show(true)
      self.library_table_6_title:TextControl():SetText(self:parse_book_title("skill_book_beretta"))
      self.library_table_6_status:TextControl():SetText(self:parse_book_status("skill_book_beretta"))
      self.library_table_7_main:Show(true)
      self.library_table_7_title:TextControl():SetText(self:parse_book_title("skill_book_bm16"))
      self.library_table_7_status:TextControl():SetText(self:parse_book_status("skill_book_bm16"))
      self.library_table_8_main:Show(true)
      self.library_table_8_title:TextControl():SetText(self:parse_book_title("skill_book_colt1911"))
      self.library_table_8_status:TextControl():SetText(self:parse_book_status("skill_book_colt1911"))
      self.library_table_9_main:Show(true)
      self.library_table_9_title:TextControl():SetText(self:parse_book_title("skill_book_desert_eagle"))
      self.library_table_9_status:TextControl():SetText(self:parse_book_status("skill_book_desert_eagle"))
      self.library_table_10_main:Show(true)
      self.library_table_10_title:TextControl():SetText(self:parse_book_title("skill_book_fn2000"))
      self.library_table_10_status:TextControl():SetText(self:parse_book_status("skill_book_fn2000"))
      self.library_table_11_main:Show(true)
      self.library_table_11_title:TextControl():SetText(self:parse_book_title("skill_book_fort"))
      self.library_table_11_status:TextControl():SetText(self:parse_book_status("skill_book_fort"))
      self.library_table_12_main:Show(true)
      self.library_table_12_title:TextControl():SetText(self:parse_book_title("skill_book_g36"))
      self.library_table_12_status:TextControl():SetText(self:parse_book_status("skill_book_g36"))
      self.library_table_13_main:Show(true)
      self.library_table_13_title:TextControl():SetText(self:parse_book_title("skill_book_gauss"))
      self.library_table_13_status:TextControl():SetText(self:parse_book_status("skill_book_gauss"))
      self.library_table_14_main:Show(true)
      self.library_table_14_title:TextControl():SetText(self:parse_book_title("skill_book_groza"))
      self.library_table_14_status:TextControl():SetText(self:parse_book_status("skill_book_groza"))
      self.library_table_15_main:Show(true)
      self.library_table_15_title:TextControl():SetText(self:parse_book_title("skill_book_hpsa"))
      self.library_table_15_status:TextControl():SetText(self:parse_book_status("skill_book_hpsa"))
      self.library_table_16_main:Show(true)
      self.library_table_16_title:TextControl():SetText(self:parse_book_title("skill_book_l85"))
      self.library_table_16_status:TextControl():SetText(self:parse_book_status("skill_book_l85"))
      self.library_table_17_main:Show(true)
      self.library_table_17_title:TextControl():SetText(self:parse_book_title("skill_book_lr300"))
      self.library_table_17_status:TextControl():SetText(self:parse_book_status("skill_book_lr300"))
      self.library_table_18_main:Show(true)
      self.library_table_18_title:TextControl():SetText(self:parse_book_title("skill_book_mp5"))
      self.library_table_18_status:TextControl():SetText(self:parse_book_status("skill_book_mp5"))
      self.library_table_19_main:Show(true)
      self.library_table_19_title:TextControl():SetText(self:parse_book_title("skill_book_pb"))
      self.library_table_19_status:TextControl():SetText(self:parse_book_status("skill_book_pb"))
      self.library_table_20_main:Show(true)
      self.library_table_20_title:TextControl():SetText(self:parse_book_title("skill_book_pm"))
      self.library_table_20_status:TextControl():SetText(self:parse_book_status("skill_book_pm"))
      self.library_table_21_main:Show(true)
      self.library_table_21_title:TextControl():SetText(self:parse_book_title("skill_book_rg-6"))
      self.library_table_21_status:TextControl():SetText(self:parse_book_status("skill_book_rg-6"))
      self.library_table_22_main:Show(true)
      self.library_table_22_title:TextControl():SetText(self:parse_book_title("skill_book_rpg7"))
      self.library_table_22_status:TextControl():SetText(self:parse_book_status("skill_book_rpg7"))
      self.library_table_23_main:Show(true)
      self.library_table_23_title:TextControl():SetText(self:parse_book_title("skill_book_sig220"))
      self.library_table_23_status:TextControl():SetText(self:parse_book_status("skill_book_sig220"))
      self.library_table_24_main:Show(true)
      self.library_table_24_title:TextControl():SetText(self:parse_book_title("skill_book_sig550"))
      self.library_table_24_status:TextControl():SetText(self:parse_book_status("skill_book_sig550"))
      self.library_table_25_main:Show(true)
      self.library_table_25_title:TextControl():SetText(self:parse_book_title("skill_book_spas12"))
      self.library_table_25_status:TextControl():SetText(self:parse_book_status("skill_book_spas12"))
      self.library_table_26_main:Show(true)
      self.library_table_26_title:TextControl():SetText(self:parse_book_title("skill_book_protecta"))
      self.library_table_26_status:TextControl():SetText(self:parse_book_status("skill_book_protecta"))
      self.library_table_27_main:Show(true)
      self.library_table_27_title:TextControl():SetText(self:parse_book_title("skill_book_pkm"))
      self.library_table_27_status:TextControl():SetText(self:parse_book_status("skill_book_pkm"))
      self.library_table_28_main:Show(true)
      self.library_table_28_title:TextControl():SetText(self:parse_book_title("skill_book_svd"))
      self.library_table_28_status:TextControl():SetText(self:parse_book_status("skill_book_svd"))
      self.library_table_29_main:Show(true)
      self.library_table_29_title:TextControl():SetText(self:parse_book_title("skill_book_svu"))
      self.library_table_29_status:TextControl():SetText(self:parse_book_status("skill_book_svu"))
      self.library_table_30_main:Show(true)
      self.library_table_30_title:TextControl():SetText(self:parse_book_title("skill_book_toz34"))
      self.library_table_30_status:TextControl():SetText(self:parse_book_status("skill_book_toz34"))
      self.library_table_31_main:Show(true)
      self.library_table_31_title:TextControl():SetText(self:parse_book_title("skill_book_usp"))
      self.library_table_31_status:TextControl():SetText(self:parse_book_status("skill_book_usp"))
      self.library_table_32_main:Show(true)
      self.library_table_32_title:TextControl():SetText(self:parse_book_title("skill_book_val"))
      self.library_table_32_status:TextControl():SetText(self:parse_book_status("skill_book_val"))
      self.library_table_33_main:Show(true)
      self.library_table_33_title:TextControl():SetText(self:parse_book_title("skill_book_vintorez"))
      self.library_table_33_status:TextControl():SetText(self:parse_book_status("skill_book_vintorez"))
      self.library_table_34_main:Show(true)
      self.library_table_34_title:TextControl():SetText(self:parse_book_title("skill_book_walther"))
      self.library_table_34_status:TextControl():SetText(self:parse_book_status("skill_book_walther"))
      self.library_table_35_main:Show(true)
      self.library_table_35_title:TextControl():SetText(self:parse_book_title("skill_book_wincheaster1300"))
      self.library_table_35_status:TextControl():SetText(self:parse_book_status("skill_book_wincheaster1300"))
      self.library_table_36_main:Show(true)
      self.library_table_36_title:TextControl():SetText(self:parse_book_title("skill_book_ak47"))
      self.library_table_36_status:TextControl():SetText(self:parse_book_status("skill_book_ak47"))
      self.library_table_37_main:Show(true)
      self.library_table_37_title:TextControl():SetText(self:parse_book_title("skill_book_apb"))
      self.library_table_37_status:TextControl():SetText(self:parse_book_status("skill_book_apb"))
      self.library_table_38_main:Show(true)
      self.library_table_38_title:TextControl():SetText(self:parse_book_title("skill_book_awm"))
      self.library_table_38_status:TextControl():SetText(self:parse_book_status("skill_book_awm"))
      self.library_table_39_main:Show(true)
      self.library_table_39_title:TextControl():SetText(self:parse_book_title("skill_book_g43"))
      self.library_table_39_status:TextControl():SetText(self:parse_book_status("skill_book_g43"))
      self.library_table_40_main:Show(true)
      self.library_table_40_title:TextControl():SetText(self:parse_book_title("skill_book_grom"))
      self.library_table_40_status:TextControl():SetText(self:parse_book_status("skill_book_grom"))
      self.library_table_41_main:Show(true)
      self.library_table_41_title:TextControl():SetText(self:parse_book_title("skill_book_m4a1"))
      self.library_table_41_status:TextControl():SetText(self:parse_book_status("skill_book_m4a1"))
      self.library_table_42_main:Show(true)
      self.library_table_42_title:TextControl():SetText(self:parse_book_title("skill_book_m14"))
      self.library_table_42_status:TextControl():SetText(self:parse_book_status("skill_book_m14"))
   -- При нажатии по библиотеке 2 --
   elseif self.pda_section==5.5 then
      self:exclude_unnecessary_for(5.5)
      self.library_table_1_main:Show(true)
      self.library_table_1_title:TextControl():SetText(self:parse_book_title("skill_book_m82"))
      self.library_table_1_status:TextControl():SetText(self:parse_book_status("skill_book_m82"))
      self.library_table_2_main:Show(true)
      self.library_table_2_title:TextControl():SetText(self:parse_book_title("skill_book_mosina"))
      self.library_table_2_status:TextControl():SetText(self:parse_book_status("skill_book_mosina"))
      self.library_table_3_main:Show(true)
      self.library_table_3_title:TextControl():SetText(self:parse_book_title("skill_book_mossberg590"))
      self.library_table_3_status:TextControl():SetText(self:parse_book_status("skill_book_mossberg590"))
      self.library_table_4_main:Show(true)
      self.library_table_4_title:TextControl():SetText(self:parse_book_title("skill_book_ppsh41"))
      self.library_table_4_status:TextControl():SetText(self:parse_book_status("skill_book_ppsh41"))
      self.library_table_5_main:Show(true)
      self.library_table_5_title:TextControl():SetText(self:parse_book_title("skill_book_xm8"))
      self.library_table_5_status:TextControl():SetText(self:parse_book_status("skill_book_xm8"))
      self.library_table_6_main:Show(true)
      self.library_table_6_title:TextControl():SetText(self:parse_book_title("skill_book_p90"))
      self.library_table_6_status:TextControl():SetText(self:parse_book_status("skill_book_p90"))
      self.library_table_7_main:Show(true)
      self.library_table_7_title:TextControl():SetText(self:parse_book_title("skill_book_ak105"))
      self.library_table_7_status:TextControl():SetText(self:parse_book_status("skill_book_ak105"))
      self.library_table_8_main:Show(true)
      self.library_table_8_title:TextControl():SetText(self:parse_book_title("skill_book_fnfal"))
      self.library_table_8_status:TextControl():SetText(self:parse_book_status("skill_book_fnfal"))
      self.library_table_9_main:Show(true)
      self.library_table_9_title:TextControl():SetText(self:parse_book_title("skill_book_fanfall"))
      self.library_table_9_status:TextControl():SetText(self:parse_book_status("skill_book_fanfall"))
      self.library_table_10_main:Show(true)
      self.library_table_10_title:TextControl():SetText(self:parse_book_title("skill_book_l85_tactical"))
      self.library_table_10_status:TextControl():SetText(self:parse_book_status("skill_book_l85_tactical"))
   -- При нажатии по оборудованиям --
   elseif self.pda_section==6 then
      self:exclude_unnecessary_for(6)
   end
   self:change_achievement_status("sniper")
   self:change_achievement_status("legend")
   self:change_achievement_status("pathfinder")
   self:change_achievement_status("guidebook")
   self:change_achievement_status("marauder")
   self:change_achievement_status("magnate")
   self:change_achievement_status("assistant")
   self:change_achievement_status("lifeguard")
end
function pda_update()
   sgm_functions.set_safe_variable("stat_taynikov")
   sgm_functions.set_safe_variable("stat_kvestov")
   sgm_functions.set_safe_variable("stat_weapon_shots")
   sgm_functions.set_safe_variable("stat_headshots")
   sgm_functions.set_safe_variable("stat_books")
   sgm_functions.set_safe_variable("stat_deserves")
   sgm_functions.set_safe_variable("stat_s_trupov")
   sgm_functions.set_safe_variable("stat_ubil_bosov")
   sgm_functions.set_safe_variable("stat_dostigeniy")
   sgm_functions.set_safe_variable("stat_medaley")
   sgm_functions.set_safe_variable("stat_guidebook")
   sgm_functions.set_safe_variable("stat_help_wounded")
   sgm_functions.set_safe_variable("stat_community","no_community")
   if r_mod_params("bool","disable_sgm_achievements",false)==false then
      achievements_update()
   end
end
------------------------------------------------------------------------------
--                              Дипломатия                                  --
------------------------------------------------------------------------------
function personal_pda:diplomatia_box_fail_ok()
   self.diplomatia_box_fail:ShowDialog(false)
   self.diplomatia_box_fail:HideDialog()
end
function personal_pda:diplomatia_box_no_location_ok()
   self.diplomatia_box_no_location:ShowDialog(false)
   self.diplomatia_box_no_location:HideDialog()
end

function personal_pda:button_t_stalkers()
   if self.pda_section==4 then
      if db.mp_actor:money()<25000 then
         self.diplomatia_box_fail:InitMessageBox("mb_diplomatia_conclude_failure")
         self.diplomatia_box_fail:ShowDialog(true)
      elseif db.mp_actor:money()>=25000 then
         self.diplomatia_box_stalkers:InitMessageBox("mb_diplomatia_conclude_stalkers")
         self.diplomatia_box_stalkers:ShowDialog(true)
      end
   end
end
function personal_pda:diplomatia_box_stalkers_yes()
   self:change_diplomatia_relation("stalker",5000)
   self.diplomatia_box_stalkers:ShowDialog(false)
   self.diplomatia_box_stalkers:HideDialog()
   self.diplomatia_box_stalkers_final:InitMessageBox("mb_diplomatia_conclude_final")
   self.diplomatia_box_stalkers_final:ShowDialog(true)
end
function personal_pda:diplomatia_box_stalkers_no()
   self.diplomatia_box_stalkers:ShowDialog(false)
   self.diplomatia_box_stalkers:HideDialog()
end
function personal_pda:diplomatia_box_stalkers_final_ok()
   self.diplomatia_box_stalkers_final:ShowDialog(false)
   self.diplomatia_box_stalkers_final:HideDialog()
end
function personal_pda:button_t_bandits()
   if self.pda_section==4 then
      if db.mp_actor:money()<28000 then
         self.diplomatia_box_fail:InitMessageBox("mb_diplomatia_conclude_failure")
         self.diplomatia_box_fail:ShowDialog(true)
      elseif db.mp_actor:money()>=28000 then
         self.diplomatia_box_bandits:InitMessageBox("mb_diplomatia_conclude_bandits")
         self.diplomatia_box_bandits:ShowDialog(true)
      end
   end
end
function personal_pda:diplomatia_box_bandits_yes()
   self:change_diplomatia_relation("bandit,bandit_alies",28000)
   self.diplomatia_box_bandits:ShowDialog(false)
   self.diplomatia_box_bandits:HideDialog()
   self.diplomatia_box_bandits_final:InitMessageBox("mb_diplomatia_conclude_final")
   self.diplomatia_box_bandits_final:ShowDialog(true)
end
function personal_pda:diplomatia_box_bandits_no()
   self.diplomatia_box_bandits:ShowDialog(false)
   self.diplomatia_box_bandits:HideDialog()
end
function personal_pda:diplomatia_box_bandits_final_ok()
   self.diplomatia_box_bandits_final:ShowDialog(false)
   self.diplomatia_box_bandits_final:HideDialog()
end
function personal_pda:button_t_dolgs()
   if self.pda_section==4 then
      if db.mp_actor:money()<30000 then
         self.diplomatia_box_fail:InitMessageBox("mb_diplomatia_conclude_failure")
         self.diplomatia_box_fail:ShowDialog(true)
      elseif db.mp_actor:money()>=30000 then
         self.diplomatia_box_dolgs:InitMessageBox("mb_diplomatia_conclude_dolgs")
         self.diplomatia_box_dolgs:ShowDialog(true)
      end
   end
end
function personal_pda:diplomatia_box_dolgs_yes()
   self:change_diplomatia_relation("dolg",30000)
   self.diplomatia_box_dolgs:ShowDialog(false)
   self.diplomatia_box_dolgs:HideDialog()
   self.diplomatia_box_dolgs_final:InitMessageBox("mb_diplomatia_conclude_final")
   self.diplomatia_box_dolgs_final:ShowDialog(true)
end
function personal_pda:diplomatia_box_dolgs_no()
   self.diplomatia_box_dolgs:ShowDialog(false)
   self.diplomatia_box_dolgs:HideDialog()
end
function personal_pda:diplomatia_box_dolgs_final_ok()
   self.diplomatia_box_dolgs_final:ShowDialog(false)
   self.diplomatia_box_dolgs_final:HideDialog()
end
function personal_pda:button_t_freedoms()
   if self.pda_section==4 then
      if db.mp_actor:money()<30000 then
         self.diplomatia_box_fail:InitMessageBox("mb_diplomatia_conclude_failure")
         self.diplomatia_box_fail:ShowDialog(true)
      elseif db.mp_actor:money()>=30000 then
         self.diplomatia_box_freedoms:InitMessageBox("mb_diplomatia_conclude_freedoms")
         self.diplomatia_box_freedoms:ShowDialog(true)
      end
   end
end
function personal_pda:diplomatia_box_freedoms_yes()
   self:change_diplomatia_relation("freedom",30000)
   self.diplomatia_box_freedoms:ShowDialog(false)
   self.diplomatia_box_freedoms:HideDialog()
   self.diplomatia_box_freedoms_final:InitMessageBox("mb_diplomatia_conclude_final")
   self.diplomatia_box_freedoms_final:ShowDialog(true)
end
function personal_pda:diplomatia_box_freedoms_no()
   self.diplomatia_box_freedoms:ShowDialog(false)
   self.diplomatia_box_freedoms:HideDialog()
end
function personal_pda:diplomatia_box_freedoms_final_ok()
   self.diplomatia_box_freedoms_final:ShowDialog(false)
   self.diplomatia_box_freedoms_final:HideDialog()
end
function personal_pda:button_t_killers()
   if self.pda_section==4 then
      if db.mp_actor:money()<35000 then
         self.diplomatia_box_fail:InitMessageBox("mb_diplomatia_conclude_failure")
         self.diplomatia_box_fail:ShowDialog(true)
      elseif db.mp_actor:money()>=35000 then
         self.diplomatia_box_killers:InitMessageBox("mb_diplomatia_conclude_killers")
         self.diplomatia_box_killers:ShowDialog(true)
      end
   end
end
function personal_pda:diplomatia_box_killers_yes()
   self:change_diplomatia_relation("killer,killer_alies",35000)
   self.diplomatia_box_killers:ShowDialog(false)
   self.diplomatia_box_killers:HideDialog()
   self.diplomatia_box_killers_final:InitMessageBox("mb_diplomatia_conclude_final")
   self.diplomatia_box_killers_final:ShowDialog(true)
end
function personal_pda:diplomatia_box_killers_no()
   self.diplomatia_box_killers:ShowDialog(false)
   self.diplomatia_box_killers:HideDialog()
end
function personal_pda:diplomatia_box_killers_final_ok()
   self.diplomatia_box_killers_final:ShowDialog(false)
   self.diplomatia_box_killers_final:HideDialog()
end
function personal_pda:button_t_rasvets()
   if self.pda_section==4 then
      if db.mp_actor:money()<10000 then
         self.diplomatia_box_fail:InitMessageBox("mb_diplomatia_conclude_failure")
         self.diplomatia_box_fail:ShowDialog(true)
      elseif db.mp_actor:money()>=10000 then
         self.diplomatia_box_rasvets:InitMessageBox("mb_diplomatia_conclude_rasvets")
         self.diplomatia_box_rasvets:ShowDialog(true)
      end
   end
end
function personal_pda:diplomatia_box_rasvets_yes()
   self:change_diplomatia_relation("rasvet",10000)
   self.diplomatia_box_rasvets:ShowDialog(false)
   self.diplomatia_box_rasvets:HideDialog()
   self.diplomatia_box_rasvets_final:InitMessageBox("mb_diplomatia_conclude_final")
   self.diplomatia_box_rasvets_final:ShowDialog(true)
end
function personal_pda:diplomatia_box_rasvets_no()
   self.diplomatia_box_rasvets:ShowDialog(false)
   self.diplomatia_box_rasvets:HideDialog()
end
function personal_pda:diplomatia_box_rasvets_final_ok()
   self.diplomatia_box_rasvets_final:ShowDialog(false)
   self.diplomatia_box_rasvets_final:HideDialog()
end
function personal_pda:help_box_ok()
   self.help_box:ShowDialog(false)
   self.help_box:HideDialog()
end
------------------------------------------------------------------------------
--                               Оборудование                               --
------------------------------------------------------------------------------
function personal_pda:FillListE(tbl)
   self.equipments_list:Clear()
   for i=1,#tbl do
      self:AddItemToListE(tbl[i])
   end
end
function personal_pda:AddItemToListE(item_section)
   local item_title=game.translate_string(sgm_functions.ReadCaption(item_section))
   local source=equipments_source(22)
   source.title:SetText(item_title)
   self.equipments_list:AddExistingItem(source)
   source.section=source:AddTextField(item_section,0)
end
function personal_pda:select_equipments()
   if self.equipments_list:GetSize()==0 then
      return
   end
   local item=self.equipments_list:GetSelectedItem()
   if not item then return end
   local selected_item=item.section:GetText()
   local item_title=sgm_functions.ReadCaption(selected_item)
   local item_descr=sgm_functions.ReadDescription(selected_item)
   self.equipments_title_field:TextControl():SetText(game.translate_string(item_title))
   self.equipments_descr_field:TextControl():SetText(game.translate_string(item_descr))
   CUI_show_item_icon(self.equipments_icon_field,selected_item)
end
------------------------------------------------------------------------------
--                              SGM достижения                              --
------------------------------------------------------------------------------
function achievements_update()
   achievements_sniper_update()
   achievements_legend_update()
   achievements_pathfinder_update()
   achievements_guidebook_update()
   achievements_marauder_update()
   achievements_magnate_update()
   achievements_assistant_update()
   achievements_lifeguard_update()
end
function achievements_sniper_update()
   local pre1=sgm_functions.read_variable("stat_headshots")
   local pre2=sgm_functions.read_variable("stat_ubil_bosov")
   if pre1~=nil and pre1>=300 and pre2~=nil and pre2>=1 and not has_alife_info("sgm_achievements_sniper") then
      give_info("sgm_achievements_sniper")
      sgm_functions.inc_counter("stat_dostigeniy",1)
      news_manager.send_tip(db.mp_actor,"st_achievement_sniper_text",0,"sgm_achievement_sniper",10000,nil,"st_achievement_tip_title")
   end
end
function achievements_legend_update()
   local pre=xr_statistic.get_actor_rank()
   if pre~=nil and pre>=2000 and has_alife_info("pri_a28_actor_in_zone_stay") and not has_alife_info("sgm_achievements_legend") then
      give_info("sgm_achievements_legend")
      sgm_functions.inc_counter("stat_dostigeniy",1)
      news_manager.send_tip(db.mp_actor,"st_achievement_legend_text",0,"sgm_achievement_legend",10000,nil,"st_achievement_tip_title")
   end
end
function achievements_pathfinder_update()
   local pre=sgm_functions.read_variable("stat_taynikov")
   if pre~=nil and pre>=85 and not has_alife_info("sgm_achievements_pathfinder") then
      give_info("sgm_achievements_pathfinder")
      sgm_functions.inc_counter("stat_dostigeniy",1)
      news_manager.send_tip(db.mp_actor,"st_achievement_pathfinder_text",0,"sgm_achievement_pathfinder",10000,nil,"st_achievement_tip_title")
   end
end
function achievements_guidebook_update()
   local pre=sgm_functions.read_variable("stat_guidebook")
   if pre~=nil and pre>=12 and not has_alife_info("sgm_achievements_guidebook") then
      give_info("sgm_achievements_guidebook")
      sgm_functions.inc_counter("stat_dostigeniy",1)
      news_manager.send_tip(db.mp_actor,"st_achievement_guidebook_text",0,"sgm_achievement_guidebook",10000,nil,"st_achievement_tip_title")
   end
   if has_alife_info("sgm_achievements_guidebook") then
     if not db.mp_actor:object("guidebook_alternal") then
        give_object_to_actor("guidebook_alternal")
     end
   end
end
function achievements_marauder_update()
   local pre=sgm_functions.read_variable("stat_s_trupov")
   if pre~=nil and pre>=18000 and not has_alife_info("sgm_achievements_marauder") then
      give_info("sgm_achievements_marauder")
      sgm_functions.inc_counter("stat_dostigeniy",1)
      news_manager.send_tip(db.mp_actor,"st_achievement_marauder_text",0,"sgm_achievement_marauder",10000,nil,"st_achievement_tip_title")
   end
end
function achievements_magnate_update()
   local pre=sgm_functions.read_variable("actor_web_money")
   if pre~=nil and pre>=20000 and not has_alife_info("sgm_achievements_magnate") then
      give_info("sgm_achievements_magnate")
      sgm_functions.inc_counter("stat_dostigeniy",1)
      news_manager.send_tip(db.mp_actor,"st_achievement_magnate_text",0,"sgm_achievement_magnate",10000,nil,"st_achievement_tip_title")
      sgm_functions.write_variable("web_money_course",125/100)
   end
end
function achievements_assistant_update()
   local value=80
   local need=sgm_functions.read_variable("zat_mechanic_stripping")~=nil and sgm_functions.read_variable("jup_mechanic_stripping")~=nil and sgm_functions.read_variable("pri_mechanic_stripping")~=nil
   if need and (sgm_functions.read_variable("zat_mechanic_stripping")>=value or sgm_functions.read_variable("jup_mechanic_stripping")>=value or sgm_functions.read_variable("pri_mechanic_stripping")>=value) and not has_alife_info("sgm_achievements_assistant") then
      give_info("sgm_achievements_assistant")
      sgm_functions.inc_counter("stat_dostigeniy",1)
      news_manager.send_tip(db.mp_actor,"st_achievement_assistant_text",0,"sgm_achievement_assistant",10000,nil,"st_achievement_tip_title")
   end
end
function achievements_lifeguard_update()
   local need=sgm_functions.read_variable("stat_help_wounded")~=nil
   if need and sgm_functions.read_variable("stat_help_wounded")>=8 and not has_alife_info("sgm_achievements_lifeguard") then
      give_info("sgm_achievements_lifeguard")
      sgm_functions.inc_counter("stat_dostigeniy",1)
      news_manager.send_tip(db.mp_actor,"st_achievement_lifeguard_text",0,"sgm_achievement_lifeguard",10000,nil,"st_achievement_tip_title")
   end
end
------------------------------------------------------------------------------
--                            Служебные функции                             --
------------------------------------------------------------------------------
function personal_pda:change_progress_bar(bar_name,value)
   self[bar_name]:SetProgressPos(value)
end
function personal_pda:start_button(xml,button_name)
   self["get_"..button_name]=xml:Init3tButton("personal_pda_form:"..button_name,self.personal_pda_form)
   self:Register(self["get_"..button_name],button_name)
end
function personal_pda:register_button(xml,button_name)
   self[button_name]=xml:Init3tButton("personal_pda_form:"..button_name,self.personal_pda_form)
   self:Register(self[button_name],button_name)
end
function personal_pda:register_element(xml,element_name)
   self[element_name]=xml:InitStatic("personal_pda_form:"..element_name,self.personal_pda_form)
end
function personal_pda:register_message_box(message_name)
   self[message_name]=CUIMessageBoxEx()
   self:Register(self[message_name],message_name)
end
function personal_pda:register_check(xml,check_name,value)
   self[check_name]=xml:InitCheck("personal_pda_form:"..check_name,self.personal_pda_form)
   if value~=nil then
      self[check_name]:SetCheck(value)
   end
end
function personal_pda:change_check(a_check,d_check)
   if self[a_check]:GetCheck() then
      self[d_check]:SetCheck(false)
   else
      self[d_check]:SetCheck(true)
   end
end
function personal_pda:change_achievement_status(a_name)
   if has_alife_info("sgm_achievements_"..a_name) then
      if self["achievements_"..a_name.."_status"]~="st_achievements_status_b_true" then
         self["achievements_"..a_name.."_status"]="st_achievements_status_b_true"
      end
   else
      if self["achievements_"..a_name.."_status"]~="st_achievements_status_b_false" then
         self["achievements_"..a_name.."_status"]="st_achievements_status_b_false"
      end
   end
end
function personal_pda:get_statistic_killed(type,stat_name)
   if type=="m" then
      return sgm_save.statistic_killed_monsters[stat_name]
   elseif type=="s" then
      return sgm_save.statistic_killed_stalkers[stat_name]
   end
end
function personal_pda:parse_book_title(item_name)
   book_target=sgm_functions.GetSkillTarget(item_name)
   if book_target~=nil and sgm_functions.ReadCaption(book_target)~=nil then
      return game.translate_string(sgm_functions.ReadCaption(book_target))
   end
   return game.translate_string("st_achievements_status_b_false")
end
function personal_pda:parse_book_status(item_name)
   book_target=sgm_functions.GetSkillTarget(item_name)
   if book_target~=nil and sgm_functions.GetSkillInfo(book_target)~=nil and has_alife_info(sgm_functions.GetSkillInfo(book_target)) then
      return game.translate_string("st_library_yes_studies")
   end
   return game.translate_string("st_library_no_studies")
end
function personal_pda:parse_book_bonus(item_name)
   book_target=sgm_functions.GetSkillTarget(item_name)
   if book_target~=nil and sgm_functions.GetSkillInfo(book_target)~=nil and has_alife_info(sgm_functions.GetSkillInfo(book_target)) then
      local damage_bonus=sgm_functions.GetSkillPoint(book_target)*100
      return "+"..damage_bonus.." "..game.translate_string("st_add_damage")
   end
   return game.translate_string("...")
end
function personal_pda:change_diplomatia_relation(to_community,cost)
   db.mp_actor:give_money(-tonumber(cost))
   game_stats.money_quest_update(-tonumber(cost))
   news_manager.relocate_money(db.mp_actor,"out",tonumber(cost))
   community_table=utils.parse_spawns(to_community)
   for k,v in pairs(community_table) do
      for i=1,v.prob do
         if has_alife_info("agreement_check_friend") then
            increase_faction_goodwill(v.section,5000)
         elseif has_alife_info("agreement_check_enemy") then
            decrease_faction_goodwill(v.section,5000)
         end
      end
   end
end
function personal_pda:init_hide_texts(table_name)
   for k,v in pairs(table_name) do
      v:TextControl():SetText("")
   end
end
function personal_pda:init_hide_objects(table_name)
   for k,v in pairs(table_name) do
      v:Show(false)
   end
end
function personal_pda:init_show_objects(table_name)
   for k,v in pairs(table_name) do
      v:Show(true)
   end
end
function personal_pda:disable_buttons(table_name)
   for k,v in pairs(table_name) do
      v:Enable(false)
   end
end
function personal_pda:enable_buttons(table_name)
   for k,v in pairs(table_name) do
      v:Enable(true)
   end
end
function personal_pda:exclude_unnecessary_for(phrase)
   if phrase==0 then
      self:init_hide_texts(self.statistic_table)
      self:init_hide_objects(self.achievements_bools_1)
      self:init_hide_texts(self.achievements_table_1)
      self:init_hide_objects(self.achievements_bools_2)
      self:init_hide_texts(self.achievements_table_2)
      self:init_hide_objects(self.library_bools)
      self:init_hide_texts(self.library_table)
      self:init_hide_objects(self.diplomatia_bools)
      self:init_hide_texts(self.diplomatia_table)
      self:init_hide_objects(self.equipments_bools)
      self:init_hide_texts(self.equipments_table)
      self.statistic_killed_page:Enable(false)
      self.statistic_killed_page:Show(false)
      self.statistic_home_page:Enable(false)
      self.statistic_home_page:Show(false)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.statistic_previous_page:Enable(false)
      self.statistic_previous_page:Show(false)
      self.achievements_next_page:Enable(false)
      self.achievements_next_page:Show(false)
      self.achievements_back_page:Enable(false)
      self.achievements_back_page:Show(false)
      self.about_cheat_achievement_page:Enable(false)
      self.about_cheat_achievement_page:Show(false)
      self.library_next_page:Enable(false)
      self.library_next_page:Show(false)
      self.library_back_page:Enable(false)
      self.library_back_page:Show(false)
      self.pda_welcome_screen:Show(true)
      self.statistic_setka:Show(false)
   elseif phrase==1 then
      self.get_tab_statistic:Enable(false)
      self.get_tab_advices:Enable(true)
      self.get_tab_library:Enable(true)
      if r_mod_params("bool","disable_sgm_achievements",false)==false then
         self.get_tab_achievements:Enable(true)
      end
      if has_alife_info("pri_a28_actor_in_zone_stay") then
         self.get_tab_diplomatia:Enable(true)
      end
      self:init_hide_objects(self.achievements_bools_1)
      self:init_hide_texts(self.achievements_table_1)
      self:init_hide_objects(self.achievements_bools_2)
      self:init_hide_texts(self.achievements_table_2)
      self:init_hide_objects(self.library_bools)
      self:init_hide_texts(self.library_table)
      self:init_hide_objects(self.diplomatia_bools)
      self:init_hide_texts(self.diplomatia_table)
      self:init_hide_objects(self.equipments_bools)
      self:init_hide_texts(self.equipments_table)
      self.statistic_killed_page:Enable(true)
      self.statistic_killed_page:Show(true)
      self.statistic_home_page:Enable(false)
      self.statistic_home_page:Show(false)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.statistic_previous_page:Enable(false)
      self.statistic_previous_page:Show(false)
      self.achievements_next_page:Enable(false)
      self.achievements_next_page:Show(false)
      self.achievements_back_page:Enable(false)
      self.achievements_back_page:Show(false)
      self.about_cheat_achievement_page:Enable(false)
      self.about_cheat_achievement_page:Show(false)
      self.library_next_page:Enable(false)
      self.library_next_page:Show(false)
      self.library_back_page:Enable(false)
      self.library_back_page:Show(false)
      self.statistic_setka:Show(true)
      self.pda_welcome_screen:Show(false)
      self.advices_field:TextControl():SetText("")
  elseif phrase==1.5 then
      self.get_tab_statistic:Enable(false)
      self.get_tab_advices:Enable(true)
      self.get_tab_library:Enable(true)
      if r_mod_params("bool","disable_sgm_achievements",false)==false then
         self.get_tab_achievements:Enable(true)
      end
      if has_alife_info("pri_a28_actor_in_zone_stay") then
         self.get_tab_diplomatia:Enable(true)
      end
      self:init_hide_objects(self.achievements_bools_1)
      self:init_hide_texts(self.achievements_table_1)
      self:init_hide_objects(self.achievements_bools_2)
      self:init_hide_texts(self.achievements_table_2)
      self:init_hide_objects(self.library_bools)
      self:init_hide_texts(self.library_table)
      self:init_hide_objects(self.diplomatia_bools)
      self:init_hide_texts(self.diplomatia_table)
      self:init_hide_objects(self.equipments_bools)
      self:init_hide_texts(self.equipments_table)
      self.statistic_killed_page:Enable(false)
      self.statistic_killed_page:Show(false)
      self.statistic_home_page:Enable(true)
      self.statistic_home_page:Show(true)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.statistic_previous_page:Enable(false)
      self.statistic_previous_page:Show(false)
      self.achievements_next_page:Enable(false)
      self.achievements_next_page:Show(false)
      self.achievements_back_page:Enable(false)
      self.achievements_back_page:Show(false)
      self.about_cheat_achievement_page:Enable(false)
      self.about_cheat_achievement_page:Show(false)
      self.library_next_page:Enable(false)
      self.library_next_page:Show(false)
      self.library_back_page:Enable(false)
      self.library_back_page:Show(false)
      self.statistic_setka:Show(true)
      self.pda_welcome_screen:Show(false)
      self.advices_field:TextControl():SetText("")
  elseif phrase==1.8 then
      self.get_tab_statistic:Enable(false)
      self.get_tab_advices:Enable(true)
      self.get_tab_library:Enable(true)
      if r_mod_params("bool","disable_sgm_achievements",false)==false then
         self.get_tab_achievements:Enable(true)
      end
      if has_alife_info("pri_a28_actor_in_zone_stay") then
         self.get_tab_diplomatia:Enable(true)
      end
      self:init_hide_texts(self.statistic_table)
      self:init_hide_objects(self.achievements_bools_1)
      self:init_hide_texts(self.achievements_table_1)
      self:init_hide_objects(self.achievements_bools_2)
      self:init_hide_texts(self.achievements_table_2)
      self:init_hide_objects(self.library_bools)
      self:init_hide_texts(self.library_table)
      self:init_hide_objects(self.diplomatia_bools)
      self:init_hide_texts(self.diplomatia_table)
      self:init_hide_objects(self.equipments_bools)
      self:init_hide_texts(self.equipments_table)
      self.statistic_killed_page:Enable(false)
      self.statistic_killed_page:Show(false)
      self.statistic_home_page:Enable(false)
      self.statistic_home_page:Show(false)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.statistic_previous_page:Enable(true)
      self.statistic_previous_page:Show(true)
      self.achievements_next_page:Enable(false)
      self.achievements_next_page:Show(false)
      self.achievements_back_page:Enable(false)
      self.achievements_back_page:Show(false)
      self.about_cheat_achievement_page:Enable(false)
      self.about_cheat_achievement_page:Show(false)
      self.library_next_page:Enable(false)
      self.library_next_page:Show(false)
      self.library_back_page:Enable(false)
      self.library_back_page:Show(false)
      self.pda_welcome_screen:Show(false)
      self.statistic_setka:Show(false)
      self.advices_field:TextControl():SetText("")
   elseif phrase==2 then
      self.get_tab_statistic:Enable(true)
      self.get_tab_advices:Enable(false)
      self.get_tab_library:Enable(true)
      if r_mod_params("bool","disable_sgm_achievements",false)==false then
         self.get_tab_achievements:Enable(true)
      end
      if has_alife_info("pri_a28_actor_in_zone_stay") then
         self.get_tab_diplomatia:Enable(true)
      end
      self:init_hide_texts(self.statistic_table)
      self:init_hide_objects(self.achievements_bools_1)
      self:init_hide_texts(self.achievements_table_1)
      self:init_hide_objects(self.achievements_bools_2)
      self:init_hide_texts(self.achievements_table_2)
      self:init_hide_objects(self.library_bools)
      self:init_hide_texts(self.library_table)
      self:init_hide_objects(self.diplomatia_bools)
      self:init_hide_texts(self.diplomatia_table)
      self:init_hide_objects(self.equipments_bools)
      self:init_hide_texts(self.equipments_table)
      self.statistic_killed_page:Enable(false)
      self.statistic_killed_page:Show(false)
      self.statistic_home_page:Enable(false)
      self.statistic_home_page:Show(false)
      self.statistic_previous_page:Enable(false)
      self.statistic_previous_page:Show(false)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.achievements_next_page:Enable(false)
      self.achievements_next_page:Show(false)
      self.achievements_back_page:Enable(false)
      self.achievements_back_page:Show(false)
      self.about_cheat_achievement_page:Enable(false)
      self.about_cheat_achievement_page:Show(false)
      self.library_next_page:Enable(false)
      self.library_next_page:Show(false)
      self.library_back_page:Enable(false)
      self.library_back_page:Show(false)
      self.pda_welcome_screen:Show(false)
      self.statistic_setka:Show(false)
   elseif phrase==3 then
      self.get_tab_statistic:Enable(true)
      self.get_tab_advices:Enable(true)
      self.get_tab_library:Enable(true)
      if r_mod_params("bool","disable_sgm_achievements",false)==false then
         self.get_tab_achievements:Enable(false)
      end
      if has_alife_info("pri_a28_actor_in_zone_stay") then
         self.get_tab_diplomatia:Enable(true)
      end
      self:init_hide_texts(self.statistic_table)
      self:init_hide_objects(self.achievements_bools_2)
      self:init_hide_texts(self.achievements_table_2)
      self:init_hide_objects(self.library_bools)
      self:init_hide_texts(self.library_table)
      self:init_hide_objects(self.diplomatia_bools)
      self:init_hide_texts(self.diplomatia_table)
      self:init_hide_objects(self.equipments_bools)
      self:init_hide_texts(self.equipments_table)
      self.statistic_killed_page:Enable(false)
      self.statistic_killed_page:Show(false)
      self.statistic_home_page:Enable(false)
      self.statistic_home_page:Show(false)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.statistic_previous_page:Enable(false)
      self.statistic_previous_page:Show(false)
      self.achievements_back_page:Enable(false)
      self.achievements_back_page:Show(false)
      self.about_cheat_achievement_page:Enable(true)
      self.about_cheat_achievement_page:Show(true)
      self.library_next_page:Enable(false)
      self.library_next_page:Show(false)
      self.library_back_page:Enable(false)
      self.library_back_page:Show(false)
      self.achievements_field:Show(true)
      self.achievements_next_page:Enable(true)
      self.achievements_next_page:Show(true)
      self.pda_welcome_screen:Show(false)
      self.statistic_setka:Show(false)
      self.advices_field:TextControl():SetText("")
   elseif phrase==3.5 then
      self.get_tab_statistic:Enable(true)
      self.get_tab_advices:Enable(true)
      self.get_tab_library:Enable(true)
      if r_mod_params("bool","disable_sgm_achievements",false)==false then
         self.get_tab_achievements:Enable(false)
      end
      if has_alife_info("pri_a28_actor_in_zone_stay") then
         self.get_tab_diplomatia:Enable(true)
      end
      self:init_hide_texts(self.statistic_table)
      self:init_hide_objects(self.achievements_bools_1)
      self:init_hide_texts(self.achievements_table_1)
      self:init_hide_objects(self.library_bools)
      self:init_hide_texts(self.library_table)
      self:init_hide_objects(self.diplomatia_bools)
      self:init_hide_texts(self.diplomatia_table)
      self:init_hide_objects(self.equipments_bools)
      self:init_hide_texts(self.equipments_table)
      self.statistic_killed_page:Enable(false)
      self.statistic_killed_page:Show(false)
      self.statistic_home_page:Enable(false)
      self.statistic_home_page:Show(false)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.statistic_previous_page:Enable(false)
      self.statistic_previous_page:Show(false)
      self.achievements_next_page:Enable(false)
      self.achievements_next_page:Show(false)
      self.about_cheat_achievement_page:Enable(false)
      self.about_cheat_achievement_page:Show(false)
      self.library_next_page:Enable(false)
      self.library_next_page:Show(false)
      self.library_back_page:Enable(false)
      self.library_back_page:Show(false)
      self.achievements_field:Show(true)
      self.achievements_back_page:Enable(true)
      self.achievements_back_page:Show(true)
      self.pda_welcome_screen:Show(false)
      self.statistic_setka:Show(false)
      self.advices_field:TextControl():SetText("")
   elseif phrase==4 then
      self.get_tab_statistic:Enable(true)
      self.get_tab_advices:Enable(true)
      self.get_tab_library:Enable(true)
      if r_mod_params("bool","disable_sgm_achievements",false)==false then
         self.get_tab_achievements:Enable(true)
      end
      if has_alife_info("pri_a28_actor_in_zone_stay") then
         self.get_tab_diplomatia:Enable(false)
      end
      self:init_hide_texts(self.statistic_table)
      self:init_hide_objects(self.achievements_bools_1)
      self:init_hide_texts(self.achievements_table_1)
      self:init_hide_objects(self.achievements_bools_2)
      self:init_hide_texts(self.achievements_table_2)
      self:init_hide_objects(self.library_bools)
      self:init_hide_texts(self.library_table)
      self:init_hide_objects(self.equipments_bools)
      self:init_hide_texts(self.equipments_table)
      self.statistic_killed_page:Enable(false)
      self.statistic_killed_page:Show(false)
      self.statistic_home_page:Enable(false)
      self.statistic_home_page:Show(false)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.statistic_previous_page:Enable(false)
      self.statistic_previous_page:Show(false)
      self.achievements_next_page:Enable(false)
      self.achievements_next_page:Show(false)
      self.achievements_back_page:Enable(false)
      self.achievements_back_page:Show(false)
      self.about_cheat_achievement_page:Enable(false)
      self.about_cheat_achievement_page:Show(false)
      self.library_next_page:Enable(false)
      self.library_next_page:Show(false)
      self.library_back_page:Enable(false)
      self.library_back_page:Show(false)
      self.diplomatia_check_area:Enable(true)
      self.diplomatia_check_area:Show(true)
      self.diplomatia_agreement_check_friend:Enable(true)
      self.diplomatia_agreement_check_friend:Show(true)
      self.diplomatia_agreement_check_enemy:Enable(true)
      self.diplomatia_agreement_check_enemy:Show(true)
      self.diplomatia_field:Show(true)
      self.pda_welcome_screen:Show(false)
      self.statistic_setka:Show(false)
      self.advices_field:TextControl():SetText("")
      self:change_check("diplomatia_agreement_check_friend","diplomatia_agreement_check_enemy")
      self:change_check("diplomatia_agreement_check_enemy","diplomatia_agreement_check_friend")
      sgm_functions.info_give_on_boolean(self.diplomatia_agreement_check_friend:GetCheck(),"agreement_check_friend")
      sgm_functions.info_give_on_boolean(self.diplomatia_agreement_check_enemy:GetCheck(),"agreement_check_enemy")
   elseif phrase==5 then
      self.get_tab_statistic:Enable(true)
      self.get_tab_advices:Enable(true)
      self.get_tab_library:Enable(false)
      if r_mod_params("bool","disable_sgm_achievements",false)==false then
         self.get_tab_achievements:Enable(true)
      end
      if has_alife_info("pri_a28_actor_in_zone_stay") then
         self.get_tab_diplomatia:Enable(true)
      end
      self:init_hide_texts(self.statistic_table)
      self:init_hide_objects(self.achievements_bools_1)
      self:init_hide_texts(self.achievements_table_1)
      self:init_hide_objects(self.achievements_bools_2)
      self:init_hide_texts(self.achievements_table_2)
      self:init_hide_objects(self.diplomatia_bools)
      self:init_hide_texts(self.diplomatia_table)
      self:init_hide_objects(self.equipments_bools)
      self:init_hide_texts(self.equipments_table)
      self.statistic_killed_page:Enable(false)
      self.statistic_killed_page:Show(false)
      self.statistic_home_page:Enable(false)
      self.statistic_home_page:Show(false)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.statistic_previous_page:Enable(false)
      self.statistic_previous_page:Show(false)
      self.achievements_next_page:Enable(false)
      self.achievements_next_page:Show(false)
      self.achievements_back_page:Enable(false)
      self.achievements_back_page:Show(false)
      self.about_cheat_achievement_page:Enable(false)
      self.about_cheat_achievement_page:Show(false)
      self.library_back_page:Enable(false)
      self.library_back_page:Show(false)
      self.library_background:Show(true)
      self.library_next_page:Enable(true)
      self.library_next_page:Show(true)
      self.pda_welcome_screen:Show(false)
      self.statistic_setka:Show(false)
      self.advices_field:TextControl():SetText("")
   elseif phrase==5.5 then
      self.get_tab_statistic:Enable(true)
      self.get_tab_advices:Enable(true)
      self.get_tab_library:Enable(false)
      if r_mod_params("bool","disable_sgm_achievements",false)==false then
         self.get_tab_achievements:Enable(true)
      end
      if has_alife_info("pri_a28_actor_in_zone_stay") then
         self.get_tab_diplomatia:Enable(true)
      end
      self:init_hide_texts(self.statistic_table)
      self:init_hide_objects(self.achievements_bools_1)
      self:init_hide_texts(self.achievements_table_1)
      self:init_hide_objects(self.achievements_bools_2)
      self:init_hide_texts(self.achievements_table_2)
      self:init_hide_objects(self.diplomatia_bools)
      self:init_hide_texts(self.diplomatia_table)
      self:init_hide_objects(self.equipments_bools)
      self:init_hide_texts(self.equipments_table)
      self.statistic_killed_page:Enable(false)
      self.statistic_killed_page:Show(false)
      self.statistic_home_page:Enable(false)
      self.statistic_home_page:Show(false)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.statistic_previous_page:Enable(false)
      self.statistic_previous_page:Show(false)
      self.achievements_next_page:Enable(false)
      self.achievements_next_page:Show(false)
      self.achievements_back_page:Enable(false)
      self.achievements_back_page:Show(false)
      self.about_cheat_achievement_page:Enable(false)
      self.about_cheat_achievement_page:Show(false)
      self.library_background:Show(true)
      self.library_next_page:Enable(false)
      self.library_next_page:Show(false)
      self.library_back_page:Enable(true)
      self.library_back_page:Show(true)
      self.library_table_11_main:Show(false)
      self.library_table_11_title:TextControl():SetText("")
      self.library_table_11_status:TextControl():SetText("")
      self.library_table_12_main:Show(false)
      self.library_table_12_title:TextControl():SetText("")
      self.library_table_12_status:TextControl():SetText("")
      self.library_table_13_main:Show(false)
      self.library_table_13_title:TextControl():SetText("")
      self.library_table_13_status:TextControl():SetText("")
      self.library_table_14_main:Show(false)
      self.library_table_14_title:TextControl():SetText("")
      self.library_table_14_status:TextControl():SetText("")
      self.library_table_15_main:Show(false)
      self.library_table_15_title:TextControl():SetText("")
      self.library_table_15_status:TextControl():SetText("")
      self.library_table_16_main:Show(false)
      self.library_table_16_title:TextControl():SetText("")
      self.library_table_16_status:TextControl():SetText("")
      self.library_table_17_main:Show(false)
      self.library_table_17_title:TextControl():SetText("")
      self.library_table_17_status:TextControl():SetText("")
      self.library_table_18_main:Show(false)
      self.library_table_18_title:TextControl():SetText("")
      self.library_table_18_status:TextControl():SetText("")
      self.library_table_19_main:Show(false)
      self.library_table_19_title:TextControl():SetText("")
      self.library_table_19_status:TextControl():SetText("")
      self.library_table_20_main:Show(false)
      self.library_table_20_title:TextControl():SetText("")
      self.library_table_20_status:TextControl():SetText("")
      self.library_table_21_main:Show(false)
      self.library_table_21_title:TextControl():SetText("")
      self.library_table_21_status:TextControl():SetText("")
      self.library_table_22_main:Show(false)
      self.library_table_22_title:TextControl():SetText("")
      self.library_table_22_status:TextControl():SetText("")
      self.library_table_23_main:Show(false)
      self.library_table_23_title:TextControl():SetText("")
      self.library_table_23_status:TextControl():SetText("")
      self.library_table_24_main:Show(false)
      self.library_table_24_title:TextControl():SetText("")
      self.library_table_24_status:TextControl():SetText("")
      self.library_table_25_main:Show(false)
      self.library_table_25_title:TextControl():SetText("")
      self.library_table_25_status:TextControl():SetText("")
      self.library_table_26_main:Show(false)
      self.library_table_26_title:TextControl():SetText("")
      self.library_table_26_status:TextControl():SetText("")
      self.library_table_27_main:Show(false)
      self.library_table_27_title:TextControl():SetText("")
      self.library_table_27_status:TextControl():SetText("")
      self.library_table_28_main:Show(false)
      self.library_table_28_title:TextControl():SetText("")
      self.library_table_28_status:TextControl():SetText("")
      self.library_table_29_main:Show(false)
      self.library_table_29_title:TextControl():SetText("")
      self.library_table_29_status:TextControl():SetText("")
      self.library_table_30_main:Show(false)
      self.library_table_30_title:TextControl():SetText("")
      self.library_table_30_status:TextControl():SetText("")
      self.library_table_31_main:Show(false)
      self.library_table_31_title:TextControl():SetText("")
      self.library_table_31_status:TextControl():SetText("")
      self.library_table_32_main:Show(false)
      self.library_table_32_title:TextControl():SetText("")
      self.library_table_32_status:TextControl():SetText("")
      self.library_table_33_main:Show(false)
      self.library_table_33_title:TextControl():SetText("")
      self.library_table_33_status:TextControl():SetText("")
      self.library_table_34_main:Show(false)
      self.library_table_34_title:TextControl():SetText("")
      self.library_table_34_status:TextControl():SetText("")
      self.library_table_35_main:Show(false)
      self.library_table_35_title:TextControl():SetText("")
      self.library_table_35_status:TextControl():SetText("")
      self.library_table_36_main:Show(false)
      self.library_table_36_title:TextControl():SetText("")
      self.library_table_36_status:TextControl():SetText("")
      self.library_table_37_main:Show(false)
      self.library_table_37_title:TextControl():SetText("")
      self.library_table_37_status:TextControl():SetText("")
      self.library_table_38_main:Show(false)
      self.library_table_38_title:TextControl():SetText("")
      self.library_table_38_status:TextControl():SetText("")
      self.library_table_39_main:Show(false)
      self.library_table_39_title:TextControl():SetText("")
      self.library_table_39_status:TextControl():SetText("")
      self.library_table_40_main:Show(false)
      self.library_table_40_title:TextControl():SetText("")
      self.library_table_40_status:TextControl():SetText("")
      self.library_table_41_main:Show(false)
      self.library_table_41_title:TextControl():SetText("")
      self.library_table_41_status:TextControl():SetText("")
      self.library_table_42_main:Show(false)
      self.library_table_42_title:TextControl():SetText("")
      self.library_table_42_status:TextControl():SetText("")
      self.pda_welcome_screen:Show(false)
      self.statistic_setka:Show(false)
      self.advices_field:TextControl():SetText("")
   elseif phrase==6 then
      self.get_tab_statistic:Enable(true)
      self.get_tab_advices:Enable(true)
      self.get_tab_library:Enable(true)
      if r_mod_params("bool","disable_sgm_achievements",false)==false then
         self.get_tab_achievements:Enable(true)
      end
      if has_alife_info("pri_a28_actor_in_zone_stay") then
         self.get_tab_diplomatia:Enable(true)
      end
      self:init_hide_texts(self.statistic_table)
      self:init_hide_objects(self.achievements_bools_1)
      self:init_hide_texts(self.achievements_table_1)
      self:init_hide_objects(self.achievements_bools_2)
      self:init_hide_texts(self.achievements_table_2)
      self:init_hide_objects(self.library_bools)
      self:init_hide_texts(self.library_table)
      self:init_hide_objects(self.diplomatia_bools)
      self:init_hide_texts(self.diplomatia_table)
      self.statistic_killed_page:Enable(false)
      self.statistic_killed_page:Show(false)
      self.statistic_home_page:Enable(false)
      self.statistic_home_page:Show(false)
      self.statistic_community_page:Enable(false)
      self.statistic_community_page:Show(false)
      self.statistic_previous_page:Enable(false)
      self.statistic_previous_page:Show(false)
      self.achievements_next_page:Enable(false)
      self.achievements_next_page:Show(false)
      self.achievements_back_page:Enable(false)
      self.achievements_back_page:Show(false)
      self.about_cheat_achievement_page:Enable(false)
      self.about_cheat_achievement_page:Show(false)
      self.library_next_page:Enable(false)
      self.library_next_page:Show(false)
      self.library_back_page:Enable(false)
      self.library_back_page:Show(false)
      self.pda_welcome_screen:Show(false)
      self.statistic_setka:Show(false)
      self.advices_field:TextControl():SetText("")
      self.equipments_background:Show(true)
      self.equipments_list:Show(true)
   end
end
function personal_pda:btn_off_pda()
   self:btn_close()
end
function personal_pda:btn_close()
   self:HideDialog()
   disable_info("personal_pda_active")
   level.show_weapon(true)
end
function personal_pda:OnKeyboard(dik,keyboard_action)
   CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
   if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
      if dik==DIK_keys.DIK_ESCAPE then
         self:btn_close()
      end
   end
   return true
end




---------------------------------//Copyright 2009-2010 GeJorge//-----------------------------------------------